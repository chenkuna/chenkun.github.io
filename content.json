[{"title":"","date":"2020-05-13T08:48:55.201Z","path":"2020/05/13/webapp07/","text":"body { width: 45em; border: 1px solid #ddd; outline: 1300px solid #fff; margin: 16px auto; } body .markdown-body { padding: 30px; } @font-face { font-family: fontawesome-mini; src: url(data:font/woff;charset=utf-8;base64,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) format('woff'); } @font-face { font-family: octicons-anchor; src: url(data:font/woff;charset=utf-8;base64,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) format('woff'); } .markdown-body { font-family: sans-serif; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; color: #333333; overflow: hidden; font-family: \"Helvetica Neue\", Helvetica, \"Segoe UI\", Arial, freesans, sans-serif; font-size: 16px; line-height: 1.6; word-wrap: break-word; } .markdown-body a { background: transparent; } .markdown-body a:active, .markdown-body a:hover { outline: 0; } .markdown-body b, .markdown-body strong { font-weight: bold; } .markdown-body mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; } .markdown-body sub, .markdown-body sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; } .markdown-body sup { top: -0.5em; } .markdown-body sub { bottom: -0.25em; } .markdown-body h1 { font-size: 2em; margin: 0.67em 0; } .markdown-body img { border: 0; } .markdown-body hr { -moz-box-sizing: content-box; box-sizing: content-box; height: 0; } .markdown-body pre { overflow: auto; } .markdown-body code, .markdown-body kbd, .markdown-body pre, .markdown-body samp { font-family: monospace, monospace; font-size: 1em; } .markdown-body input { color: inherit; font: inherit; margin: 0; } .markdown-body html input[disabled] { cursor: default; } .markdown-body input { line-height: normal; } .markdown-body input[type=\"checkbox\"] { box-sizing: border-box; padding: 0; } .markdown-body table { border-collapse: collapse; border-spacing: 0; } .markdown-body td, .markdown-body th { padding: 0; } .markdown-body .codehilitetable { border: 0; border-spacing: 0; } .markdown-body .codehilitetable tr { border: 0; } .markdown-body .codehilitetable pre, .markdown-body .codehilitetable div.codehilite { margin: 0; } .markdown-body .linenos, .markdown-body .code, .markdown-body .codehilitetable td { border: 0; padding: 0; } .markdown-body td:not(.linenos) .linenodiv { padding: 0 !important; } .markdown-body .code { width: 100%; } .markdown-body .linenos div pre, .markdown-body .linenodiv pre, .markdown-body .linenodiv { border: 0; -webkit-border-radius: 0; -moz-border-radius: 0; border-radius: 0; -webkit-border-top-left-radius: 3px; -webkit-border-bottom-left-radius: 3px; -moz-border-radius-topleft: 3px; -moz-border-radius-bottomleft: 3px; border-top-left-radius: 3px; border-bottom-left-radius: 3px; } .markdown-body .code div pre, .markdown-body .code div { border: 0; -webkit-border-radius: 0; -moz-border-radius: 0; border-radius: 0; -webkit-border-top-right-radius: 3px; -webkit-border-bottom-right-radius: 3px; -moz-border-radius-topright: 3px; -moz-border-radius-bottomright: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; } .markdown-body * { -moz-box-sizing: border-box; box-sizing: border-box; } .markdown-body input { font: 13px Helvetica, arial, freesans, clean, sans-serif, \"Segoe UI Emoji\", \"Segoe UI Symbol\"; line-height: 1.4; } .markdown-body a { color: #4183c4; text-decoration: none; } .markdown-body a:hover, .markdown-body a:focus, .markdown-body a:active { text-decoration: underline; } .markdown-body hr { height: 0; margin: 15px 0; overflow: hidden; background: transparent; border: 0; border-bottom: 1px solid #ddd; } .markdown-body hr:before, .markdown-body hr:after { display: table; content: \" \"; } .markdown-body hr:after { clear: both; } .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 { margin-top: 15px; margin-bottom: 15px; line-height: 1.1; } .markdown-body h1 { font-size: 30px; } .markdown-body h2 { font-size: 21px; } .markdown-body h3 { font-size: 16px; } .markdown-body h4 { font-size: 14px; } .markdown-body h5 { font-size: 12px; } .markdown-body h6 { font-size: 11px; } .markdown-body blockquote { margin: 0; } .markdown-body ul, .markdown-body ol { padding: 0; margin-top: 0; margin-bottom: 0; } .markdown-body ol ol, .markdown-body ul ol { list-style-type: lower-roman; } .markdown-body ul ul ol, .markdown-body ul ol ol, .markdown-body ol ul ol, .markdown-body ol ol ol { list-style-type: lower-alpha; } .markdown-body dd { margin-left: 0; } .markdown-body code, .markdown-body pre, .markdown-body samp { font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; font-size: 12px; } .markdown-body pre { margin-top: 0; margin-bottom: 0; } .markdown-body kbd { background-color: #e7e7e7; background-image: -moz-linear-gradient(#fefefe, #e7e7e7); background-image: -webkit-linear-gradient(#fefefe, #e7e7e7); background-image: linear-gradient(#fefefe, #e7e7e7); background-repeat: repeat-x; border-radius: 2px; border: 1px solid #cfcfcf; color: #000; padding: 3px 5px; line-height: 10px; font: 11px Consolas, \"Liberation Mono\", Menlo, Courier, monospace; display: inline-block; } .markdown-body>*:first-child { margin-top: 0 !important; } .markdown-body>*:last-child { margin-bottom: 0 !important; } .markdown-body .headeranchor-link { position: absolute; top: 0; bottom: 0; left: 0; display: block; padding-right: 6px; padding-left: 30px; margin-left: -30px; } .markdown-body .headeranchor-link:focus { outline: none; } .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 { position: relative; margin-top: 1em; margin-bottom: 16px; font-weight: bold; line-height: 1.4; } .markdown-body h1 .headeranchor, .markdown-body h2 .headeranchor, .markdown-body h3 .headeranchor, .markdown-body h4 .headeranchor, .markdown-body h5 .headeranchor, .markdown-body h6 .headeranchor { display: none; color: #000; vertical-align: middle; } .markdown-body h1:hover .headeranchor-link, .markdown-body h2:hover .headeranchor-link, .markdown-body h3:hover .headeranchor-link, .markdown-body h4:hover .headeranchor-link, .markdown-body h5:hover .headeranchor-link, .markdown-body h6:hover .headeranchor-link { height: 1em; padding-left: 8px; margin-left: -30px; line-height: 1; text-decoration: none; } .markdown-body h1:hover .headeranchor-link .headeranchor, .markdown-body h2:hover .headeranchor-link .headeranchor, .markdown-body h3:hover .headeranchor-link .headeranchor, .markdown-body h4:hover .headeranchor-link .headeranchor, .markdown-body h5:hover .headeranchor-link .headeranchor, .markdown-body h6:hover .headeranchor-link .headeranchor { display: inline-block; } .markdown-body h1 { padding-bottom: 0.3em; font-size: 2.25em; line-height: 1.2; border-bottom: 1px solid #eee; } .markdown-body h2 { padding-bottom: 0.3em; font-size: 1.75em; line-height: 1.225; border-bottom: 1px solid #eee; } .markdown-body h3 { font-size: 1.5em; line-height: 1.43; } .markdown-body h4 { font-size: 1.25em; } .markdown-body h5 { font-size: 1em; } .markdown-body h6 { font-size: 1em; color: #777; } .markdown-body p, .markdown-body blockquote, .markdown-body ul, .markdown-body ol, .markdown-body dl, .markdown-body table, .markdown-body pre, .markdown-body .admonition { margin-top: 0; margin-bottom: 16px; } .markdown-body hr { height: 4px; padding: 0; margin: 16px 0; background-color: #e7e7e7; border: 0 none; } .markdown-body ul, .markdown-body ol { padding-left: 2em; } .markdown-body ul ul, .markdown-body ul ol, .markdown-body ol ol, .markdown-body ol ul { margin-top: 0; margin-bottom: 0; } .markdown-body li>p { margin-top: 16px; } .markdown-body dl { padding: 0; } .markdown-body dl dt { padding: 0; margin-top: 16px; font-size: 1em; font-style: italic; font-weight: bold; } .markdown-body dl dd { padding: 0 16px; margin-bottom: 16px; } .markdown-body blockquote { padding: 0 15px; color: #777; border-left: 4px solid #ddd; } .markdown-body blockquote>:first-child { margin-top: 0; } .markdown-body blockquote>:last-child { margin-bottom: 0; } .markdown-body table { display: block; width: 100%; overflow: auto; word-break: normal; word-break: keep-all; } .markdown-body table th { font-weight: bold; } .markdown-body table th, .markdown-body table td { padding: 6px 13px; border: 1px solid #ddd; } .markdown-body table tr { background-color: #fff; border-top: 1px solid #ccc; } .markdown-body table tr:nth-child(2n) { background-color: #f8f8f8; } .markdown-body img { max-width: 100%; -moz-box-sizing: border-box; box-sizing: border-box; } .markdown-body code, .markdown-body samp { padding: 0; padding-top: 0.2em; padding-bottom: 0.2em; margin: 0; font-size: 85%; background-color: rgba(0,0,0,0.04); border-radius: 3px; } .markdown-body code:before, .markdown-body code:after { letter-spacing: -0.2em; content: \"\\00a0\"; } .markdown-body pre>code { padding: 0; margin: 0; font-size: 100%; word-break: normal; white-space: pre; background: transparent; border: 0; } .markdown-body .codehilite { margin-bottom: 16px; } .markdown-body .codehilite pre, .markdown-body pre { padding: 16px; overflow: auto; font-size: 85%; line-height: 1.45; background-color: #f7f7f7; border-radius: 3px; } .markdown-body .codehilite pre { margin-bottom: 0; word-break: normal; } .markdown-body pre { word-wrap: normal; } .markdown-body pre code { display: inline; max-width: initial; padding: 0; margin: 0; overflow: initial; line-height: inherit; word-wrap: normal; background-color: transparent; border: 0; } .markdown-body pre code:before, .markdown-body pre code:after { content: normal; } /* Admonition */ .markdown-body .admonition { -webkit-border-radius: 3px; -moz-border-radius: 3px; position: relative; border-radius: 3px; border: 1px solid #e0e0e0; border-left: 6px solid #333; padding: 10px 10px 10px 30px; } .markdown-body .admonition table { color: #333; } .markdown-body .admonition p { padding: 0; } .markdown-body .admonition-title { font-weight: bold; margin: 0; } .markdown-body .admonition>.admonition-title { color: #333; } .markdown-body .attention>.admonition-title { color: #a6d796; } .markdown-body .caution>.admonition-title { color: #d7a796; } .markdown-body .hint>.admonition-title { color: #96c6d7; } .markdown-body .danger>.admonition-title { color: #c25f77; } .markdown-body .question>.admonition-title { color: #96a6d7; } .markdown-body .note>.admonition-title { color: #d7c896; } .markdown-body .admonition:before, .markdown-body .attention:before, .markdown-body .caution:before, .markdown-body .hint:before, .markdown-body .danger:before, .markdown-body .question:before, .markdown-body .note:before { font: normal normal 16px fontawesome-mini; -moz-osx-font-smoothing: grayscale; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; line-height: 1.5; color: #333; position: absolute; left: 0; top: 0; padding-top: 10px; padding-left: 10px; } .markdown-body .admonition:before { content: \"\\f056\\00a0\"; color: 333; } .markdown-body .attention:before { content: \"\\f058\\00a0\"; color: #a6d796; } .markdown-body .caution:before { content: \"\\f06a\\00a0\"; color: #d7a796; } .markdown-body .hint:before { content: \"\\f05a\\00a0\"; color: #96c6d7; } .markdown-body .danger:before { content: \"\\f057\\00a0\"; color: #c25f77; } .markdown-body .question:before { content: \"\\f059\\00a0\"; color: #96a6d7; } .markdown-body .note:before { content: \"\\f040\\00a0\"; color: #d7c896; } .markdown-body .admonition::after { content: normal; } .markdown-body .attention { border-left: 6px solid #a6d796; } .markdown-body .caution { border-left: 6px solid #d7a796; } .markdown-body .hint { border-left: 6px solid #96c6d7; } .markdown-body .danger { border-left: 6px solid #c25f77; } .markdown-body .question { border-left: 6px solid #96a6d7; } .markdown-body .note { border-left: 6px solid #d7c896; } .markdown-body .admonition>*:first-child { margin-top: 0 !important; } .markdown-body .admonition>*:last-child { margin-bottom: 0 !important; } /* progress bar*/ .markdown-body .progress { display: block; width: 300px; margin: 10px 0; height: 24px; -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; background-color: #ededed; position: relative; box-shadow: inset -1px 1px 3px rgba(0, 0, 0, .1); } .markdown-body .progress-label { position: absolute; text-align: center; font-weight: bold; width: 100%; margin: 0; line-height: 24px; color: #333; text-shadow: 1px 1px 0 #fefefe, -1px -1px 0 #fefefe, -1px 1px 0 #fefefe, 1px -1px 0 #fefefe, 0 1px 0 #fefefe, 0 -1px 0 #fefefe, 1px 0 0 #fefefe, -1px 0 0 #fefefe, 1px 1px 2px #000; -webkit-font-smoothing: antialiased !important; white-space: nowrap; overflow: hidden; } .markdown-body .progress-bar { height: 24px; float: left; -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; background-color: #96c6d7; box-shadow: inset 0 1px 0 rgba(255, 255, 255, .5), inset 0 -1px 0 rgba(0, 0, 0, .1); background-size: 30px 30px; background-image: -webkit-linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); background-image: -moz-linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); background-image: -ms-linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); background-image: -o-linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); background-image: linear-gradient( 135deg, rgba(255, 255, 255, .4) 27%, transparent 27%, transparent 52%, rgba(255, 255, 255, .4) 52%, rgba(255, 255, 255, .4) 77%, transparent 77%, transparent ); } .markdown-body .progress-100plus .progress-bar { background-color: #a6d796; } .markdown-body .progress-80plus .progress-bar { background-color: #c6d796; } .markdown-body .progress-60plus .progress-bar { background-color: #d7c896; } .markdown-body .progress-40plus .progress-bar { background-color: #d7a796; } .markdown-body .progress-20plus .progress-bar { background-color: #d796a6; } .markdown-body .progress-0plus .progress-bar { background-color: #c25f77; } .markdown-body .candystripe-animate .progress-bar{ -webkit-animation: animate-stripes 3s linear infinite; -moz-animation: animate-stripes 3s linear infinite; animation: animate-stripes 3s linear infinite; } @-webkit-keyframes animate-stripes { 0% { background-position: 0 0; } 100% { background-position: 60px 0; } } @-moz-keyframes animate-stripes { 0% { background-position: 0 0; } 100% { background-position: 60px 0; } } @keyframes animate-stripes { 0% { background-position: 0 0; } 100% { background-position: 60px 0; } } .markdown-body .gloss .progress-bar { box-shadow: inset 0 4px 12px rgba(255, 255, 255, .7), inset 0 -12px 0 rgba(0, 0, 0, .05); } /* Multimarkdown Critic Blocks */ .markdown-body .critic_mark { background: #ff0; } .markdown-body .critic_delete { color: #c82829; text-decoration: line-through; } .markdown-body .critic_insert { color: #718c00 ; text-decoration: underline; } .markdown-body .critic_comment { color: #8e908c; font-style: italic; } .markdown-body .headeranchor { font: normal normal 16px octicons-anchor; line-height: 1; display: inline-block; text-decoration: none; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .headeranchor:before { content: '\\f05c'; } .markdown-body .task-list-item { list-style-type: none; } .markdown-body .task-list-item+.task-list-item { margin-top: 3px; } .markdown-body .task-list-item input { margin: 0 4px 0.25em -20px; vertical-align: middle; } /* Media */ @media only screen and (min-width: 480px) { .markdown-body { font-size:14px; } } @media only screen and (min-width: 768px) { .markdown-body { font-size:16px; } } @media print { .markdown-body * { background: transparent !important; color: black !important; filter:none !important; -ms-filter: none !important; } .markdown-body { font-size:12pt; max-width:100%; outline:none; border: 0; } .markdown-body a, .markdown-body a:visited { text-decoration: underline; } .markdown-body .headeranchor-link { display: none; } .markdown-body a[href]:after { content: \" (\" attr(href) \")\"; } .markdown-body abbr[title]:after { content: \" (\" attr(title) \")\"; } .markdown-body .ir a:after, .markdown-body a[href^=\"javascript:\"]:after, .markdown-body a[href^=\"#\"]:after { content: \"\"; } .markdown-body pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; } .markdown-body pre, .markdown-body blockquote { border: 1px solid #999; padding-right: 1em; page-break-inside: avoid; } .markdown-body .progress, .markdown-body .progress-bar { -moz-box-shadow: none; -webkit-box-shadow: none; box-shadow: none; } .markdown-body .progress { border: 1px solid #ddd; } .markdown-body .progress-bar { height: 22px; border-right: 1px solid #ddd; } .markdown-body tr, .markdown-body img { page-break-inside: avoid; } .markdown-body img { max-width: 100% !important; } .markdown-body p, .markdown-body h2, .markdown-body h3 { orphans: 3; widows: 3; } .markdown-body h2, .markdown-body h3 { page-break-after: avoid; } } webapp07 title: webapp实战美团开发 07 持续更新..... date: 2020-05-09 21:38:44 tags: webapp 生活的理想就是为了理想的生活 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ————张闻天 各位同学，下面的章节我们就要进入我们真正的项目页面的逻辑开发了，我们首先从最简单的登陆页面开始，相信大家已经准备好了相关环境，我们就开始写代码！ 登陆页面逻辑图： 在开始开发一个页面，我们首先需要梳理一下整个页面的逻辑流程，下面这张图就是登陆页面的流程： 1.首先需要输入手机号进行登陆。这里我们省去了注册的步骤，而是每次登陆采用手机短信验证的方式。 2.手机号输入成功需要先获取验证码，填上验证码后进行登陆。 3.效验成功后就表明登陆成功，然后需要将当前用户的信息设置在vuex的store中。 4.效验失败则重新尝试，这里我们有限频逻辑，会在后面章节中讲解。 UI效果 下面是整个页面最终的实现效果： 整个登陆页面的UI相对来说比较简单的，页面上的UI元素很少，下面就进入开发。 引入weui weui主要由2部分组成，weui.css和weui.js，其中weui.css主要是提供了常用组件的样式，列如按钮，输入框等等。 而wuui.js则提供了组件的JavaScript调用封装，提供给我们JavaScript接口来调用weui的组件，列如弹出框，图片上传组件等等。 首先，我们需要安装下载wuui，这里我们采用原阿门引入的方式： weui.css下载:下载地址:GitHub weui.js下载：下载地址:GitHub 我们在前端项目的pubic文件夹下，新建lib文件夹，存放weui的资源文件。 修改index.html，引入weui.min.js:L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"log\":false,\"model\":{\"jsonPath\":\"/live2dw/assets/miku.model.json\"},\"display\":{\"position\":\"right\",\"width\":250,\"height\":400},\"mobile\":{\"show\":true}});","tags":[]},{"title":"webapp实战美团开发 07 持续更新.....","date":"2020-05-09T13:38:44.000Z","path":"2020/05/09/webapp07/","text":"生活的理想就是为了理想的生活&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ————张闻天 各位同学，下面的章节我们就要进入我们真正的项目页面的逻辑开发了，我们首先从最简单的登陆页面开始，相信大家已经准备好了相关环境，我们就开始写代码！ 登陆页面逻辑图：在开始开发一个页面，我们首先需要梳理一下整个页面的逻辑流程，下面这张图就是登陆页面的流程： 1.首先需要输入手机号进行登陆。这里我们省去了注册的步骤，而是每次登陆采用手机短信验证的方式。2.手机号输入成功需要先获取验证码，填上验证码后进行登陆。3.效验成功后就表明登陆成功，然后需要将当前用户的信息设置在vuex的store中。4.效验失败则重新尝试，这里我们有限频逻辑，会在后面章节中讲解。 UI效果下面是整个页面最终的实现效果： 整个登陆页面的UI相对来说比较简单的，页面上的UI元素很少，下面就进入开发。 引入weuiweui主要由2部分组成，weui.css和weui.js，其中weui.css主要是提供了常用组件的样式，列如按钮，输入框等等。 而wuui.js则提供了组件的JavaScript调用封装，提供给我们JavaScript接口来调用weui的组件，列如弹出框，图片上传组件等等。 首先，我们需要安装下载wuui，这里我们采用原阿门引入的方式： weui.css下载:下载地址:GitHubweui.js下载：下载地址:GitHub 我们在前端项目的pubic文件夹下，新建lib文件夹，存放weui的资源文件。 修改index.html，引入weui.min.js: 1&lt;script type=\"text/javascript\" src=\"&lt;%= BASE_URL %&gt;lib/weui/weui.min.js\"&gt;&lt;/script&gt; 在前端项目的入口文件main.js中，引入weui.min.css: 1import './assets/weui.min.css' 这里解释以下为何在index.html引入weui.min.js而在main.js引入weui.min.css: weui.min.js属于第三方的依赖，我们在index.html引入可以直接使用一个全局变量window.weui，这样不必在每个页面使用时引入，比较方便，并且我们安装weui.min.js也是直接采用下载的方是来引入并没有放在node_modules里来使用。当然，如果各位想通过node_modules引入也是完全可以的。 weui.min.css也是第三方的样式，我们在main.js引入是为了让webpack帮助我们进行打包，这样可以让postcss-px-to-viewport对weui.min.css的单位进行转换。 创建login.vue在前端项目新建一个components文件夹，用来存放一些页面的公共组件，同时新建login文件夹，并且新建index.vue，然后开始编写我们的UI了，代码如下： 1234567891011121314151617181920212223242526272829&lt;template&gt; &lt;div class=\"container\"&gt; &lt;div class=\"close\" @click=\"close\"&gt;&lt;/div&gt; &lt;p class=\"title\"&gt;手机号登录&lt;/p&gt; &lt;div class=\"weui-cell weui-cell_vcode\"&gt; &lt;div class=\"weui-cell__hd\"&gt; &lt;label class=\"weui-label\"&gt;手机号&lt;/label&gt; &lt;/div&gt; &lt;div class=\"weui-cell__bd\"&gt; &lt;input class=\"weui-input\" maxlength=\"11\" type=\"tel\" pattern=\"^\\d&#123;11&#125;$\" placeholder=\"请输入手机号\" v-model=\"phoneNum\"&gt; &lt;/div&gt; &lt;div class=\"weui-cell__ft\"&gt; &lt;button v-show=\"timeCode == 60\" class=\"weui-vcode-btn\" @click=\"getCode\"&gt;获取验证码&lt;/button&gt; &lt;div v-show=\"timeCode != 60\" class=\"time-code weui-vcode-btn\"&gt;&#123;&#123;timeCode&#125;&#125;s&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"weui-cell weui-cell_vcode vcode-input scale-1px\"&gt; &lt;div class=\"weui-cell__hd\"&gt;&lt;label class=\"weui-label\"&gt;验证码&lt;/label&gt;&lt;/div&gt; &lt;div class=\"weui-cell__bd\"&gt; &lt;input v-model=\"code\" class=\"weui-input\" type=\"number\" placeholder=\"请输入验证码\"&gt; &lt;/div&gt; &lt;/div&gt; &lt;a class=\"weui-btn weui-btn_primary\" href=\"javascript:\" @click=\"signUp\"&gt;确定&lt;/a&gt; &lt;/div&gt;&lt;/template&gt;","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"webapp实战美团开发 06 持续更新.....","date":"2020-05-01T11:24:33.000Z","path":"2020/05/01/webapp06/","text":"知识是一种快乐，而好奇则是知识的萌芽。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;—————培根 这节课我们来搭建一下后端项目，后端项目我们主要使用的是Express。Express是一个简洁而灵活的node.js Web应用框架，提供了一系列强大特性帮助你创建各种Web应用，和丰富的HTTP工具。使用Express可以快速地搭建一个完整功能的网站。 express-generator正如前面介绍的，Express是一个基于Node.js后端的MVC框架，Express Generator是一个Express项目脚手架生成工具，你可以把它理解成vuecli的作用，我们需要首先安装Express Generator; npm install express-generator -g 初始化后端项目安装完成之后就可以执行命令，初始化后端项目； express wecircleServer –no-view --no-view即不需要模板引擎这些工具。这里我们采用--no-view配置，主要是我们的是一个前后端分离项目，我们的后端只负责提供对应的API接口，所有的页面渲染由前端的vue完成。当然，在初始化项目时，有一些其他选项可以配置，可以参考下面这些文档： 123456789101112131415161718$ express -h Usage:express[options][dir] Options: -h,--help 输出使用方法 --version 输出版本号 -e,--ejs 添加对ejs模板引擎的支持 --hbs 添加对handlebars模板引擎的支持 --pug 添加对pug模板引擎的支持 -H,--hogan 添加对hogan.js模板引擎的支持 --no-view 创建不带视图引擎的项目 -v, --view &lt;engine&gt; 添加对视图引擎（view） &lt;engine&gt; 的支持 (ejs|hbs|hjs|jade|pug|twig|vash) （默认是 jade 模板引擎） -c, --css &lt;engine&gt; 添加样式表引擎 &lt;engine&gt; 的支持 (less|stylus|compass|sass) （默认是普通的 css 文件） --git 添加 .gitignore -f, --force 强制在非空目录下创建 之后我们可以得到如下的目录结构： 123456789101112├── bin│ └── www //项目启动脚本├── public //存放静态资源，后续我们的前端dist打包的项目会存放在此│ ├── images│ ├── javascripts│ └── stylesheets│ └── style.css├── routes //每个模块的路由文件│ ├── index.js│ └── users.js├── app.js //项目的主入口文件，负责路由的配置，数据库初始化└── package.json 这样看起来也很清爽有木有，其中 routes 这个文件夹主要用来存放一些路由文件，并且到时会区分模块来写，即用户模块，消息模块，私信聊天模块等等。 其中路由也是负责 API 接口的主要职责，包括 post 和 get 这些方法。 public 这个文件夹存放的都是静态资源文件，我们后面的前端项目打包完成后会放在这个文件里面。 启动后端项目后端项目的脚手架完成之后，我们就可以先尝试去启动它，使用下面的命令： npm install npm run start 程序启动之后默认监听3000端口，我们可以试一下，浏览器输入http://localhost:3000会看到内柔如下： 其中的静态资源文件可以通过localhost:3000/javascript/xxx.js访问到了，证明我们的服务已经启动成功。 当然这个只是初期的脚手架，和前端一样，我们后面会在此基础上添砖加瓦！ 小结本章节主要讲解了Express，以及使用Express Generator生成我们的后端，并介绍了后端的目录结构，为后续的后端开发做准备","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"直白的话告诉你在 javascript 中如何用 jsonp 实现跨域请求","date":"2019-11-14T03:03:18.000Z","path":"2019/11/14/jsfirst/","text":"前言 这边文档希望通过自己对jsonp的理解，能够采用最简单、最直白的语言告诉大家jsonp是干嘛的！当然，其间难免有纰漏之处，希指正出来！jsonp能解决的问题 首先我们需要jsonp是干嘛的，它是一种解决浏览器跨域问题的方案，说道这里什么是浏览器跨域呢！说白了，就是浏览器内部有一种机制为了保证每个站点之间的请求达到安全、独立，相互交互不乱套等，浏览器阻止了不同源站点之间的请求。如果不采用跨域的话，浏览器将会报错的。 1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html lang=\"Zh-cn\"&gt;&lt;head&gt; &lt;meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\"/&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,Chrome=1.0\"/&gt; &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,user-scalable=no\"/&gt; &lt;meta name=\"renderer\" content=\"webkit\"/&gt; &lt;meta name=\"Keywords\" content=\"\"/&gt; &lt;meta name=\"description\" content=\"\"/&gt; &lt;title&gt;demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=\"text/javascript\"&gt; (function()&#123; var xhr = new XMLHttpRequest(); xhr.open('GET','http://localhost/demo/demo1.php',true); xhr.send(); xhr.onreadystatechange = function()&#123; if(xhr.status == 200 &amp;&amp; xhr.readyState == 4)&#123; console.log(xhr.responseText); &#125;else&#123; console.log('什么都没有'); &#125;; &#125;; xhr.onerror = function()&#123; console.log('请求出错了！'); &#125;; &#125;)();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 我们通过上面的页面在请求资源时可以看到下面请求跨域错误提示： 怎样理解跨域，以及它跟浏览器的关系呢！ 首先我们不想把概念说的神乎其神，但是大家要理解下面说的话，可以先看下《http报文权威指南》了解下相关概念！这里指出一下，如果只是从http请求的方面来说，上面的页面请求是没有什么问题的，而且也不会报错，因为http本身是无状态的，它也不知道请求的是谁，被请求的是谁，它只知道客户端有请求，服务器把客户端需要的东西返回就好了！上面的页面之所以会报错，是由于浏览器自己带有了一种叫做同源策略的安全机制产生的！ 什么是同源策略，相关概念可以自行google或百度，说白了就是一种机制促使浏览器限制不同源之间的请求。这里说一下什么样的请求是不同源的，看下面的表格： www.demo.com www.demo.com 这是不同源的，因为协议不同 www.demo1.com www.demo2.com 这是不同源的，因为主机不同 www.demo.com:80 www.demo.com:8080 这是不同源的，因为协议不同 ### 怎么解决跨域请求问题呢！ 常见的和自己熟悉有几种方案，如：1、用cros；2、用代理；3、使用jsonp。这里只对jsonp介绍，其他的方案可以自行查看相关文档。 jsonp的原理 jsonp原理其实很简单，首先我们先回归一个现实：我们发现，当我们在html插入img、a、script标签的时候，它们是没有同源限制的。所以jsonp的原理就是利用img、script等标签插入一个请求地址，让不同源的请求远离浏览器的同源策略限制。 实（示）例12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html lang=\"Zh-cn\"&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"/&gt; &lt;title&gt;demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=\"text/javascript\" src=\"http://localhost/demo/demo1.php\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;后台demo1.php代码如下:&lt;?php echo \"console.log('欢迎访问demo1.php页面')\";?&gt; 怎么实现精确回调呢！ 有时候我们并不是只是见到的得到后台数据就好了，还要到前台进行一些处理，那怎么做呢！恩，没错就是使用回调，首先说一下思路：1、首先在页面中定义好回调函数；2、然后在页面通过插入相关标签待query参数的形式实现jsonp请求传递回调函数名字；3、后台得到回调函数名字，并将需要处理的数据传递给回调函数，最后向前台返回回调函数的“调用”，最后一步切记是传回回调函数的调用。示例如下： 前台代码 12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html lang=\"Zh-cn\"&gt;&lt;head&gt; &lt;meta charset=\"utf-8\"/&gt; &lt;title&gt;demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=\"text/javascript\"&gt; //第一步，现在前台定义回调函数 function addNum(num1,num2)&#123; var sum = num1 + num2; console.log(\"两数相加的结果是\"+sum); return sum; &#125;; //第二步，插入script标签并通过传入query参数的形式传递回调函数的名字给后台 (function()&#123; var _script = document.createElement('script'); _script.type = 'text/javascript'; _script.src = 'http://localhost/demo/demo2.php?callback=addNum'; document.body.appendChild(_script); &#125;)();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 后台demo2.php代码如下： 1234567891011&lt;?php /*第三步，获取前台传过来的回调函数的名字*/ $fontEndCallback = $_GET['callback'];//addNum; /*这里我们先模拟两个数据$num1,$num2， 实际生产环境中可能就是查询数据库等操作获取数据 */ $num1 = 15; $num2 = 30; /*最后切记是返回回调函数的调用，一定记得是调用*/ echo $fontEndCallback.\"($num1,$num2)\";//这里的‘.’相当于js里面的字符串连接操作，等同+ ?&gt; 控制台结果截图如下： 只要弄懂这三步你就会对jsonp心领神会了！ jsonp跟ajax的区别、jsonp和json的区别 首先严格来说，jsonp和ajax是没有关系，唯一的相同点可能就是都是向后台发请求！jsonp和json也是没有关系的，虽然看上去名字很像，但是jsonp描述的是一种请求数据的跨域方式，而json是一种数据格式！","tags":[{"name":"js","slug":"js","permalink":"https://chenkun.de/tags/js/"}]},{"title":"webapp实战美团开发 05 持续更新.....","date":"2019-11-11T12:37:51.000Z","path":"2019/11/11/webapp05/","text":"这一节我将带着大家来初始化一个前端项目，创建前端项目我们会使用到vue cli 3这个工具，是一个脚手架工具，所谓脚手架就是一个项目初始化的结构，vue cli 3帮助我们规范了项目初期的目录结构，结构配置等等，然后我们可以多把事件花在逻辑层上，减少了繁琐的添加各种配置，但是也不排除我们在项目开发过程中会修改一些配置来满足我们的项目需求。 初始化前端项目首页我们需要安装vue cli来初始化我们的前端项目框架（npm下载很慢大家可以安装一下淘宝镜像cnpm）： npm install -g @vue/cli 然后我们使用vue/cli创建一个项目： wecircle vue create wecircle 选择Manually select features,上下键选择，回车确认，空格选中，表示我们不采用默认的模板，而是根据自己的情况选择需要安装的模块，例如vue-router，ESLint等等。 这一步主要选择我们需要的模块，这里说明一下 Babel：给我们提供了能够使用ES6条件，Babel将我们的ES6代码转换成浏览器兼容性更强的ES5，这意味着，你可以现在就用ES6编写程序，而不用担心现有环境是否支持，基本上现在的项目都会选择它； Router：这里的Router指的是vue-router，属于vue全家桶的一项，我们用它主要是帮助我们实现单页应用的页面路由； Vuex：Vuex是专门为Vue.js设计的状态管理库，它采用集中式存储管理应用的所有组件的状态，同时利用Vuex可以实现跨组件的通信。 Css Pre-processors: CSS的预处理工具选择，列如Sass，Less，stylus，同时默认会集成PostCss，PostCss和他们的区别在于： 1.PostCss是将最后生成的CSS进行处理，包括补充和提供一些而外的功能，比较典型的功能是将我们的CSS样式添加上不同的前缀例如：autoprefixer。2.另外三者称为CSS预处理工具，强调的是提供一些API，让我们编写CSS样式时更加具有代码逻辑，使我们的CSS更加具有组织性，例如可以定义变量等等。 Linter/Formatter：代码规范工具选择，现在主要用的就是ESLint，来帮我们处理代码规范问题。 创建项目的最后一布会看到我们选择的模块清单，这里解释几个地方： history mode：是vue-router的路由模式，我们并没有选择history，而是选择了默认的hash，这样我们可以在url里清晰的看到页面的参数和当前的路径，更加清晰。 where do you prefer placing config for babel…有两个参数ln dedicated config files：单独创建Bable，ESlint的配置文件。ln package.json：将Bable，ESlint这些配置文件继承在package.json里。 我们的项目选择单独的配置文件这种模式，也就是 ln dedicated config files,截图上选择的package.json生成文件之后表现就像下面这样： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&#123; \"name\": \"wecircle\", \"version\": \"0.1.0\", \"private\": true, \"scripts\": &#123; \"serve\": \"vue-cli-service serve\", \"build\": \"vue-cli-service build\", \"lint\": \"vue-cli-service lint\" &#125;, \"dependencies\": &#123; \"core-js\": \"^3.3.2\", \"vue\": \"^2.6.10\", \"vue-router\": \"^3.1.3\", \"vuex\": \"^3.0.1\" &#125;, \"devDependencies\": &#123; \"@vue/cli-plugin-babel\": \"^4.0.0\", \"@vue/cli-plugin-eslint\": \"^4.0.0\", \"@vue/cli-plugin-router\": \"^4.0.0\", \"@vue/cli-plugin-vuex\": \"^4.0.0\", \"@vue/cli-service\": \"^4.0.0\", \"@vue/eslint-config-prettier\": \"^5.0.0\", \"babel-eslint\": \"^10.0.3\", \"eslint\": \"^5.16.0\", \"eslint-plugin-prettier\": \"^3.1.1\", \"eslint-plugin-vue\": \"^5.0.0\", \"less\": \"^3.0.4\", \"less-loader\": \"^5.0.0\", \"prettier\": \"^1.18.2\", \"vue-template-compiler\": \"^2.6.10\" &#125;, \"eslintConfig\": &#123; \"root\": true, \"env\": &#123; \"node\": true &#125;, \"extends\": [ \"plugin:vue/essential\", \"@vue/prettier\" ], \"rules\": &#123;&#125;, \"parserOptions\": &#123; \"parser\": \"babel-eslint\" &#125; &#125;, \"postcss\": &#123; \"plugins\": &#123; \"autoprefixer\": &#123;&#125; &#125; &#125;, \"browserslist\": [ \"&gt; 1%\", \"last 2 versions\" ]&#125; 这里是为了演示package.json的效果，我们的项目里还是使用的单独的配置文件这种模式。 save this as a preset…:表示你是否愿意将这次选择的模块存储成一个模板，一边下次创建项目时，可以直接选择。 OK，到这里我们的项目的初始文件和目录结构就已经完成了，它的目录结构应该是下面这个样子，看起来很清爽有木有，相比vue cli 2减少了很多东西，不过随着我们后面项目的进行，会不断新增代码和逻辑，就像建造一栋大楼，不断添砖加瓦。 123456789101112131415161718├── public // 静态文件目录│ ├── index.html // 首页html├── dist // 打包输出目录（首次打包之后生成）├── src // 项目源码目录│ ├── assets │ ├── components │ ├── views │ ├── App.vue │ ├── main.js │ ├── router.js │ ├── store.js ├── .editorconfig // 编辑器配置项├── .eslintrc.js // eslint 配置项├── .eslintignore.js // eslint 忽略目录├── postcss.config.js // postCss配置项├── babel.config.js // babel配置项├── vue.config.js // 项目配置文件，用了配置或者覆盖默认的配置└── package.json // package.json 启动前端项目打开package.json的script，我们可以看到3个命令：serve、build和lint，分别使用npm run来运行这3个命令效果如下： 启动开发模式：npm run serve 启动生产模式打包：npm run build 启动代码规范检查，处理语法错误： npm run build lint 这三个命令都是基于vue-cli-service提供的命令，我们可以查看更多的配置参数： 1234567#命令：npm run serve其他参数说明：--open 在服务器启动时打开浏览器--copy 在服务器启动时将URL复制到剪切板--mode 指定环境模式（默认值：development）--host 指定host（默认值：0.0.0.0）--port 指定port（默认值：8080）--https 使用https（默认值：false） 12345678910#命令：npm run build其他参数说明：--mode 指定环境模式（默认值：production）--dest 指定输出目录（默认值：dist）--modern 面向现代浏览器带自动回退地构建应用--target app|lib|wc|wc-async（默认值：app）--name 库或Web Components模式下的名字（默认值：packag.json中的\\\"name\\\"字段或入口文件名）--no-clean 在构建项目之前不清除目标目录--report 生成report.html以帮助分析内容--report-json 生成report.json以帮助分析包内容--watch 监听文件变化 123456# 命令：npm run lint 其他参数说明：--format[formatter] 指定一个formatter（默认值：codeframe）--no-fix 不修复错误--no-fix-warnings 除了warnings（警告）错误不修复，其他的都修复--max-errors[limit] 超过多少个错误就标记本次构建失败（默认值：0）--max-warnings[limit] 超过多少个warnings(警告)错误标记本次构建失败（默认值：lnfinity） 通过npx vue-cli-service –help命令查看，会发现有另外一个inspect命令： vue-cli-service inspect，通过这个命令可以得到项目的webapck配置文件，由于vue cli 3将整个默认的webpack配置集成到了内部，所以单独对于webpack配置文件是不便于查看的，使用这个命令可以在当前项目的根目录得到一个webpack.config.xxx.js的配置文件。 npx vue-cli-service inspect–mode 指定环境模式（默认值：development） 小结本章节主要讲解了使用vue cli 3生成我们的项目目录，并介绍了相关的命令配置，为后续的项目打下基础。相关知识点如下：1.前端脚手架的概念解释。2.vue cli 3能够帮助我们生成使用的前端框架，省去了繁琐的配置，但是需要注意的是，基本的配置项还是需要掌握。3.vue-cli-service的命令参数和使用方法。","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"webapp实战美团开发 04 持续更新.....","date":"2019-10-27T03:00:09.000Z","path":"2019/10/27/webapp04/","text":"学习这件事不在乎有没有人教你，最重要的是在于你自己有没有觉悟和恒心。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————达尔文 Chrome DevTools 模拟器移动设备使用Chrome DevTools的Device Mode功能，可以大致了解你的页面在移动设备上呈现的外观和效果，这个是一种非常方便的调试移动端页面的方法。但是需要注意的是，Device Mode的效果和真机的效果也不是100%一样，所以当你的页面在Device Mode测试完成时，别忘了在真机上看看，确保万无一失。点击Toggle Device Toolbar切换设备工具栏，可以打开用于模拟移动设备视口的界面。快捷键F12 或者 ctrl+shift+c可以调出此功能。 移动设备视口模式要模拟特定移动设备尺寸，请从Device列表中选择一个合适模拟设备。想要立即生效，可以刷新一下浏览器。 限制网络流量我们知道，移动端的网络状况时错综复杂的，当然我们在开发移动页面时也要兼容这种情况，Chrome DevTools给我们提供了模拟各种网速的功能：或者按Command+Shift+P（Mas）或Control+Shift+P(Windows、Liunx、Chrome操作系统),以打开命令菜单，输入3G，然后选择Enable fast 3G throttling或Enable slow 3G throttling。其他的面板功能比如Sources，Network等等和PC端的使用方法一致，在这里就不过多解释了。另外在Application里有Service Worker的相关配置和功能将在后面的章节讲解。 rem和vw适配方案比较我们此次的实战项目，主要时一个移动Web项目，那么就不得不提屏幕适配。所谓屏幕适配，说白了就是让我们的移动页面在不同的移动端屏幕下，都能展示出良好的效果，那么当下比较流行的适配方案主要有2个： rem适配方案 vw适配方案这两种适配方案既可以搭配使用，也可以结合Media Query(媒体查询)来使用，达到针对不同屏幕的适配效果。下面来讲讲两者的区别： rem适配方案rem(font size of the root element)是指相对于根元素的字体大小的单位。简单的说它就是要给相关单位。看到rem大家一定会想起em单位，em(font size of the element)是指相对于父元素的字体大小的单位。他们之间其实很相似，只不过计算的规则一个是依赖根元素，一个是依赖父元素。 rem的适配原理：将我们之前写px的单位换成rem单位，然后动态设置根元素html的font-size大小，从而达到适配的目的。 浏览器html默认字体大小(在不修改浏览器字体情况下)是16px，所以默认情况下1rem=16px，但是我们通常需要动态设置html的font-size。 123456789101112/*使用MediaQuery动态设置html的font-size*/@media screen and(max-width:360px)and(min-width:321px)&#123; html&#123; font-size:22px; &#125;&#125;@media screen and (max-width:320px)&#123; html&#123; font-size:30px; &#125;&#125; 12345678//使用javascript动态设置html的font-size：window.addEventListener('resize',function()&#123; //获取视窗宽度 let htmlWidth = document.documentElement.clientWidth || document.boby.clientWidth; //获取html let htmlDom = document.getElementsByTagName('html')[0]; htmlDom.style.fontSize = htmlWidth / 10 + 'px'; //求出基准值&#125;) 实际应用当中，大多数采用的Javascript来动态设置。设置完之后，我们就可以直接利用rem单位来给我们的div或者其他元素设置宽高等一些属性，这里就有一个问题，我们一般拿到Ul给的视觉稿一般是以Iphone6的屏幕设计，这里一个按钮的标注的宽高20*40单位是px，由此我们可以得到： Iphone6的屏幕是375*667单位是px（这个单位可以在使用Chrome DevTools时得到）； 根据上面的JavaScript设置的html的font-size得到是37.5px； 那么根据1rem=37.5px，得到20px=0.53rem，40px=1.06rem。 12345.button&#123; width:0.53rem; height:1.06rem; background-color:red;&#125; 当然，在实际项目中，我们可以使用sass的公式来解决这些繁琐的换算问题： 12345678910@function px2rem($px)&#123; $rem:37.5px; @return ($px/$rem)+rem;&#125;.button&#123; width:px2rem(20); height:px2rem(40); background-color:red;&#125; 好了，关于rem的相关知识，我们先讲到这里。如果大家想了解更多，可以去看一下这个慕课网课程：移动web开发适配秘籍Rem。 VW适配方案vw其实也是一个css单位，类似的还有vh，vmin，vmax共四个单位，这些单位伴随着CSS3的出现就已经有了。但是当时移动Web的浪潮已经来临，并且rem出现的要早，所以很多人忽略了这个。但是rem使用适配是要依赖JavaScript来进行处理（动态设置html根元素的font-size），而vw适配方案完全基于CSS自身。 vw：1vw等于视口宽度的1% vh：1vh等于视口高度的1% vmin：选取vw和vh中最小的那个 vmax：选取vw和vh中最大的那个 视口宽度：表示你在meta里设置的那个宽度： 1&lt;meta name=\"viewport\" content=\"width=device-width\"&gt; 使用document.documentElement.clientWidth可以获取到浏览器的视口大小，这里要注意不一样的是类似window.innerWidth或者window.screen.width这些拿到的是浏览器的物理宽度，当width!=device-width时是不等效的哦。同理我们将Iphone6的Ul搞下，这里一个按钮的标注的宽高是20*40单位是px，转换成vw： 12345.button&#123; width:5.3vw;(20/375*100vw) height:10.6vw;(40/375*100vw) background-color:red;&#125; 同理，你可能也需要要给sass公式来解决繁琐的换算问题： 123@function vw($px)&#123; @return ($px/375) * 100vw;&#125; 那么vw方案相比rem优势在于，不需要JavaScript来动态设置html根元素的font-size；劣势在于浏览器兼容性不如rem。 rem兼容性： vw兼容性： 由于现在市面上Android4.4以下的机型还占有一定的比例（9%左右），这个量还是不容忽视的，这也是现在vw适配方案没有rem流行的主要原因之一。好在既然所有最新浏览器都已经支持vw，那么随着事件推移，相信vw未来必将会流行。 postcss-px-to-viewport适配前面说了那么多理论知识，那么下面就回到我们的实战项目中。本次实战项目采用vw适配方案（因为rem的适配方案用的太多，尝试以下心的vw方案），使用postcss的postcss-px-to-viewport插件来帮我们进行px和vw之间的转换。 12#安装postcss-px-to-viewport:npm install postcss-px-to-viewport --save 在postcss.config.js添加配置： 123456789\"postcss-px-to-viewport\":&#123; viewportWidth:375, //视窗的宽度,对应的是我们设计稿的宽度，Iphone6的一般是375(xx/375*10vw) viewportHeight:667, //视窗的高度，Iphone6的一般是667 unitPrecision:3, //指定'px'转换为视窗单位值得小数位数（很多时候无法整除） viewportUnit:\"vw\", //指定需要转换成得视窗单位，建议使用vw selectorBlackList:['.ignore','.hairlines'], //指定不转换为视窗单位得类，可以自定义，可以无限添加，建议定义一至两个通用得类名 minPixelValue:1, //小于或等于'1px'不转换为视窗单位，你也可以设置为你想要得值 midiaQuery:false //允许在媒体查询中转换 'px'&#125; 设置之后，我们在项目里直接写px单位，然后postCss就可以帮我们转换成vw单位，很方面有木有。 1234567.name-info&#123; position:absolute; right:12px; top:12px; border-radius: 5px; display:flex;&#125; 实际效果： 同时，我们把autoprefixer也默认配置上去： 12345678module.exports = &#123; plugins:&#123; autoprefixer:&#123;&#125;, 'postcss-px-to-viewport':&#123; *** &#125; &#125;&#125; 小结本章节主要给大家介绍了Chrome DevTools模拟移动设备和移动端得常见适配方案，包括rem适配和vw适配，同时比较了两者得差别和优劣。另外在项目里引入postcss-px-to-viewport来帮助我们解决单位转换为题。","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"webapp实战美团开发 03 持续更新.....","date":"2019-10-26T14:50:36.000Z","path":"2019/10/26/webapp03/","text":"能生存下来的物种，并不是那些最强壮的，也不是那些最聪明的，而是那些对变化作出快速反应的&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————达尔文 工欲善其事必先利其器。在开发一个完整的项目之前，准备一个完整的开发环境是非常重要的。当然如果你是前端大佬，可能这些环境早已用的滚瓜烂熟；但是如果你是刚入坑前端，就跟着我一步一步把环境搭建起来； 1.安装代码编辑器Sublime Text 3下载地址 https://www.sublimetext.com/3,可以选择自己的操作系统平台进行安装。 谈谈代码编辑器的选择当前流行的代码编辑器主要有： Visual Studio Code,Sublime Text,WebStorm三种，笔者觉得代码编辑器完全由自己的喜好和习惯决定，并没有一个完全正确的，正所谓萝卜青菜各有所爱。从当前的趋势看来，Visual Studio Code 的使用者更多一些，这可能是得益于精美的界面风格和完善的插件生态，笔者之前也是一直用的这款编辑器；WebStorm的功能也很强大，但是太过笨重。这次之所以没有用这两个而是选择Sublime Text，是为了体验一下新鲜的事物，总有点喜新厌旧的感觉。从效果上来看，Sublime Text更加轻便，如果长时间操作，也不会有卡顿的感觉。 2.下载Node.js下载地址Node.js安装的时候注意要选择Add to PATH，这样才能在命令行终端使用node命令。安装完了Node.js之后就有了Npm包管理工具，但是鉴于国内的一些网络问题，可以选择使用CNPM(淘宝镜像)来安装相关的模板，在后面的项目实战中我们会使用cnpm来安装我们的项目依赖。 npm install -g cnpm –registry=https://registry.npm.taobao.org 3.下载安装MongoDB下载地址：MongoDB,在Server选项下，选择自己操作系统平台的进行安装。window安装界面：一路下一步，选择合适的安装目录。注意这里lnstall MongoDB Compass(可视化工具),勾选这个选项会下载一个MongoDB的可视化工具，如果网络情况不太好的话可能会花很长的时间，所以不建议勾选。可以选择一个基于Node.js开发的MongoDB可视化工具adminmongo 启动和关闭MongoDB安装完MongoDB后，以管理模式启动CMD，切换到MongoDB的安装目录，并执行命令： mongo.exe –dbpath &quot;D:\\mongodb\\data\\db&quot; –logpath &quot;D:\\mongodb\\logs\\log.txt&quot; -dbpath:指定数据库文件的存放路径，\\data\\db路径没有的话需要自己新建一个 -logpath:指定了日志文件的存放路径。此方法在当前的窗口启动MongoDB，使用ctrl+c即可结束服务；如果想让服务器长期在后台运行，可以使用： mongod.exe –dbpath “D:\\mongodb\\data\\db” –logpath “D:\\mongodb\\logs\\log.txt” –install -serviceName “MongoDB” -install:指定作为一个Windows服务安装然后执行启动命令： net start MongoDB停止命令：net stop MongoDB 安装adminmongoadminmongo是一个MongoDB的基于网页版的可视化管理工具，使用方便，安装简单。可以直接在GitHub上下载使用，Github地址:adminmongo。使用git或者是下载源码zip： git clone https://github.com/mrvautin/adminMongo.git 安装相关模块 cd adminMongocnpm install 启动服务： npm start 访问http://127.0.0.1:1234即可使用，第一次使用时需要配置MongoDB数据库connection，这个我们会在后面讲解。 小结本章主要讲解了环境准备工作，包括代码编辑器的Sublime Text的安装，以及相关编辑器的介绍，Node.js安装和MongoDB安装和使用方法。到这里我们的开发环境就已经搭建完成了，后面我们来看下屏幕适配方案的选择。微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"前端常见面试题2","date":"2019-10-16T09:17:26.000Z","path":"2019/10/16/site/","text":"生活的理想，就是为了理想的生活&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————张闻天 介绍一下CSS盒子模型1.盒模型：内容（content）、填充（padding）、边界（margin）、边框（border）2.有两种，IE盒子模型、标准W3C盒子模型；IEcontent部分包含了border、padding js中有哪些内置函数object Array bollean number string function date regexp error ==和===之间的区别？==：运算符称作相等，用来检测两个操作数是否相等，这里的相等定义的非常宽松，可以允许进行类型转换===：用来检测两个操作是否严格相等1.对于string，number等基础类型，==和===是有区别的不同类型间比较，==之比较”转化成同一类型的值”看”值”是否相等，===如果类型不同，其结果就是不等同类型比较，直接进行”值”比较，两者结果一样2.对Array,Object等高级类型，==和===是没有区别的3.基础类型于高级类型，==和===是有区别的对于==，将高级转化为基础类型，进行”值”比较，因为类型不同，===false 2+2+’2’和’2’+2+2的结果？4 222 break和continue语句的作用？Break语句从当前循环中退出。continue语句继续下一个循环语句。 运行结果123456for(var i=0;i&lt;5;i++)&#123; setTimeout(function()&#123; console.log(i) &#125;,1000)&#125;console.log(i) 5个5 写出几种减少页面加载时间的方法1.优化图片2.图像格式的选择（GIF：提供的颜色较少，可用在一些对颜色要求不高的地方）3.优化CSS（压缩CSS，如margin-top，margin-left…）4.网址后加斜杠（如www.campr.com/目录，会判断这个”目录是什么文件类型，或者是目录。）5.标明高度和宽度（如果浏览器没有找到这两个参数，它需要一边下载图片一边计算大小，如果图片很多，浏览器需要不断地调整页面。这不但影响速度，也影响浏览体验。 当浏览器知道了高度和宽度参数后，即使图片暂时无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载时间快了，浏览体验也更好了。）6.减少http请求（合并文件，合并图片）。 innerHTML 和innerText : 区别innerHTML： 1.innerHTML会将标签和标签中的内容获取出来 2.innerHTML .innerHTML=&#39;&lt;p&gt;&lt;/p&gt;&#39;;只会将文本内容解析出来，不会显示标签innerText。 1.innerText只会将标签中的内容获取出来，不会获取标签 2.innerText有参数，.innerText=&#39;&lt;p&gt;&lt;/p&gt;&#39;，会将标签和内容都解析到网页中 使用一种排序方法实现排序方法1：添加Array原生方法 123456Array.prototype.sort2 = function()&#123; //实现数字升序 this.sort(function(a,b)&#123; return a - b; &#125;)&#125; 方法2：不写原生方法 1234var arr = [1,4,8,2,11,7,3,5];arr.sort(function(a,b)&#123; return a - b;&#125;) 数组去重var ary = [12,8,12,78,8,35,25,35];1.过滤器和indexof 12345var ary = [12,8,12,78,8,35,25,35];var ary2 = ary.filter(function(element,index,self)&#123; return self.indexOf(element) === index;&#125;)console.log(ary2) 2.利用se6的set方法 123var ary = [12,8,12,78,8,35,25,35];var ary2 = Array.from(new Set(ary));console.log(ary2) 这里的方法很多 我就不各个列出来了 感兴趣的可以自行百度 (可写伪代码)不借助临时变量，进行两个整数的交换：a=3,b=412345678910function swao(a,b)&#123; b = a + b a = b - a b = b - a return [a,b]&#125;//b = a + b ==&gt; b 相当于 (a + b)//a = b - a ==&gt; 由上可得 a = (a + b) - a 得到 a = b//b = b - a ==&gt; 由上可得 b = (a + b) - b 得到 b = a//交换成功~ 解释：栈、堆、队列队列只能在队头做删除操作，在队尾做插入操作。而栈只能在栈顶做插入和删除操作 栈就是一个桶，后放进去的先拿出来，它下面本来有的东西要等它出来之后才能出来 堆是在程序运行时，而不是在程序编译时，申请某个大小的内存空间。即动态分配内存，对其访问和对一般内存的访问没有区别。{堆是指程序运行是申请的动态内存，而栈只是指一种使用堆的方法（即先进后出）。}栈是先进后出，但是于堆而言却没有这个特性，两者都是存放临时数据的地方。对于堆，我们可以随心所欲的进行增加和删除变量，不要遵循什么次序，只要你喜欢。 解释：浅拷贝和深拷贝1.浅拷贝：将原对象或原数组的引用直接赋值给新对象，新数组，新对象/数组只是原对象的一个引用2.深拷贝：创建一个新的对象和数组，将原对象的各项属性的&quot;值&quot;(数组的所有元素)拷贝过来，是&quot;值&quot;而不是&quot;引用&quot;网上答案很多 我挑了一个容易懂得想要了解更多的可以自行百度哦(溜了…) （逻辑题）分金条问题问题：有个商人雇用了一位手艺高超的工匠了为他做一个精致产品，工作一星期七天的代价是一条金条。商人手头上有一条金条，刚好有可以付工匠一星期的工钱。但工匠要求工钱要按每天来付。虽然他并不急着用钱，每天有钱进账，老人心里总是踏实一些。但商人家中有个规矩，金条每星期只能切二刀。后来商人想出以了个切割金条的办法，满足了工匠的要求。你知道商人是怎么切割金条才能满足工匠的吗？答案：切成1、2、4。解释：这三个二进制数的组合能表示0-7中的任何一个。 （逻辑题）有两根不均匀分布的香，香烧完的时间是一个小时，你能用什么方法来确定一段15分钟的时间？ 先将香A一头点燃，香B两头点然，等香B烧完之后，说明时间过去了半个小时 还剩半个小时，这时 再将香A的另一头也点燃，香A两头同时燃烧的这段时间就是15分钟。 说说flex布局Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状提供最大的灵活性。任何一个容器都可以指定为Flex布局。行内元素也可以使用Flex布局。采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。以下有6个属性设置在容器上flex-direction flex-wrap flex-flow justify-content align-items align-content每个人的理解都不一样这里就不过多说了 split() join() 的区别join() 方法用于把数组中的所有元素放在一个字符串。元素是通过指定的分隔符进行分割的。 1234567&lt;script&gt; var a=new Array(); a[0]=\"XHTML\"; a[1]=\"CSS\"; a[2]=\"JavaScript\"; alert(a.join(\"#\")); //XHTML#css#JavaScript&lt;/script&gt; split(a,b)方法用于把一个字符串分割成字符串数组。a是必须的，决定个从a这里开始分割b不是必须的，可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。注意返回的数组中不包括a本身； 12345var str=\"how are you?\";document.write(str.split(\"\")+\"&lt;br /&gt;\");//h,o,w, ,a,r,e, ,y,o,u,?document.write(str.split(\"a\")+\"&lt;br /&gt;\");//how ,re you? 不包含a本身document.write(str.split(\" \")+\"&lt;br /&gt;\");//how,are,you?document.write(str.split(\"\",3)+\"&lt;br /&gt;\");//h,o,w get和post的区别 请求方式 GET post 参数位置 url的query中 一般在content中，query也可 参数大小 受限于浏览器url大小，一般不超过32k 1G 服务器数据接收 接收一次 根据数据大小，可分多次接收 适用场景（语义） 从服务器端获取数据不做增删改 想服务器提交数据，如做增删改操作 安全性 参数携带在url中，安全性低 相对于GET请求，安全性更高 说说Base64可以将任意的字节数据，通过算法，生成只有(大小写英文、数字、+、/)(一共64字符)内容表示的字符串数据。即将任意的内容转换为可见的字符串形式Base64算法的特点：1.将数据按照3个字节一组的形式进行处理，每三个字节在编码之后被转换为4个字节。2.当数据的长度无法满足3的倍数的情况下，最后的数据需要进行填充操作，即补&quot;=&quot;，这里&quot;=&quot;是填充字符，不要理解为第65个字符 什么是cookie1.Cookie是浏览器访问服务器后，服务器传给浏览器得一段数据。2.浏览器需要保存这段数据，不得轻易删除。3.此后每次浏览器访问服务器，都必须带上得这段数据。","tags":[{"name":"面试题","slug":"面试题","permalink":"https://chenkun.de/tags/面试题/"}]},{"title":"webapp实战美团开发 02 持续更新.....","date":"2019-10-14T07:54:12.000Z","path":"2019/10/14/webapp02/","text":"项目技术栈介绍1.前端框架Vue.js和全家桶 说到Vue.js相信大家都不会陌生，可以说是当前国内最流行的前端框架MVVM框架，本次项目也会采用Vue.js@2.6.10 版本来进行开发，其中包括了vue-router,vuex。当然为了照顾一些Vue.js的初学者，在后面的实战代码编写中，会穿插讲解其相关的知识点。 2.前端脚手架工具Vue Cli 3Vue Cli是基于Vue.js的前端项目脚手架生成工具，现在主要用的有两个版本，Vue Cli 2 和Vue Cli 3，折两个版本的cli生成的项目目录和相关配置都不太一样，本次实战将会采用最新的Vue Cli 3版本。 3.前端UL框架WuUIWeUI是一套微信视觉体验一致的基础杨式库，由微信官方设计团队为微信网页和微信小程序量身设计，我们采用WeUI主要是为了让我们的页面风格更贴近微信的风格。 4.前端动画效果Animate.css[Animate.css]是一个使用CSS3的animatin制作的动画效果的开源CSS效果集合，里面预设了很多种常用的动画，且使用非常简单，我们在项目中主要用来实现一些特效动画，以及结合vue-router实现各种页面转场效果。 5.Node.js和ExpressNode.js我就不多说了，它为前端工程师打开了后端的大门。Express是一个保持最小规模的灵活的Node.js web应用程序开发框架（说白了就是后端的MAC框架，如果大家接触过Java的SSH，或者是SSM应该很好理解），为web和移动应用程序提供了一组强大的功能。优点在于灵活，结合Express Generator，可以轻松的实现后端项目框架，我们在项目中的后台逻辑都是基于Express来编写，包括路由控制，API管理，数据库封装，以及登陆效验，以及登陆效验，状态保存等等。 6.后端数据库MongoDBMongoDB是一个基于分布式文件存储的数据库，是当前NoSQL数据库产品中最热门的一种。我们实战项目的数据库建模包括Post表、User表、Chat表等等，都是借助于mongoose是MongoDB的一个对象模型工具，封装了MongoDB对文档的一些增删改查等常用方法，让Node.js操作MongoDB数据库变得更加容易（说白了就是用面向对象的思想去操作数据库，而且还没有关系型数据库的.sql脚本，用起来更加轻便）。所以我们的后端技术栈可以理解为：Node.js+Express+MongoDB 7.PWA离线应用PWA（progressing web app），渐进式网页应用程序，是Google在2016年Google/O大会上提出的下一代web应用模型，并在随后的日子里迅速发展。一个PWA应用首先是一个网页，可以通过web技术编写一个网页应用。随后添加上App Manifest 和 Service Worker来实现PWA的安装和离线等功能。我们在项目的收尾阶段，会将项目构建成一个PWA应用，看起来更像是”APP”。 8.阿里云部署为了使大家掌握更加完整的项目部署相关知识，我们的实战项目将会真实的部署在阿里云上面，同时会教大家：购买阿里云———&gt;配置FTP功能———&gt;配置pm2管理工具———&gt;项目发布的一条龙服务。让大家真实的体会到自己的项目在线上环境中的运行。 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"webapp实战美团开发 01  持续更新.....","date":"2019-10-13T02:33:44.000Z","path":"2019/10/13/webapp01/","text":"最近在慕课网上学了一个实战课程，觉得还是蛮使用的可以提升一下，就跟大家分享一下。也是为了巩固知识点嘻嘻😄。主攻web前端开发，移动web方向（也叫HTML5业务，一个坑很多的领域），这个课程主要是webapp美团开发实战，这个课程主要使用移动web技术于Hybrid技术去开发移动WebApp，结合React全家桶技术作为前端框架 ，是一个前端项目的课程。 本次课程是一个结合Vue.js和移动web开发，以及Node.js和MongoDb开发实现的全栈项目，并且会采用阿里云相关的服务来实现真正能上线体验的真实企业级业务。 相信作为一个前端工程师来讲，你或多或少都回接触一些工作上的业务，并且在工作之余写过一下demo来丰富自己的技术范围，但是一个真正和企业级项目和一般的练手项目有某些方面还是有不少区别的： 1.服务器的申请和相关域名的申请，你以及Nginx的配置等相关的一些运维工作、短信和图床存储等公共第三方服务的选择；2.前端页面的兼容性问题，比如移动端web项目，你可能需要至少5款Android和IOS手机来测试兼容性和适配性，以及在代码编写过程中，也要区分不同机型，因为不同机型可能有着不同的逻辑；3.后端相关的部署上，保证服务的高效性和稳定性，比如如何进行管理，负载均衡等问题。 保持一个严谨的态度是一个企业级项目必不可少的。除此以外，不管你是一个初级前端的小白玩家，还是要给混迹多年的前端大佬，Vue.js及相关的技术栈作为现在最流行的前端框架之一，如何在项目中充分的使用它们；移动web开发技术和传统的PC开发到底有何区别；如何进行屏幕适配；如何在移动端开发高效的CSS3动画等；在使用Node.js和Express框架开发后台接口时，如何对数据建模；如何实现用户认证，权限效验；如何利用ScoKet.io开发高并发的聊天接口；MongoDB和Mongoose到底有什么区别；如何使用Mongose进行复杂数据的高效增删改查；如何结合当下流行的PWA技术让项目的用户体验像一个真正的WebApp，结合阿里云服务如何进行真实的线上发版和部署，这些问题我都会一一为大家解答。 课程主要分为三大部分： 第一部分： 在功能上主要讲解相关技术栈和相关环境的搭建和准备工作。其中包括知识点： 1.页面适配方案对比（rem和vm）；2.Vue cli3和Express-generator使用讲解；3.Chrome模拟器的简单使用 第二部分 主要讲解了实战项目的页面逻辑开发。 1.登陆页面逻辑和后端开发，此模块涉及的知识点如下： WuUl使用讲解 如何在项目中使用Vuex SE7的async和await的使用技巧 如何在Express框架中集成用户效验JSON Web Token 机制 使用第三方阿里云短信服务完成登陆验证 2.发布页面的前后端逻辑开发，以及移动端图片上传功能，此模块涉及的知识点如下： 企业级阿里云图片服务如何接入 HTML5的input使用技巧讲解 Mongoose的多表关联讲解 3.朋友圈首页的前后端逻辑开发，以及各种下拉刷新功能、图片查看器功能、底部键功能等开发，此模块涉及的知识点如下： 移动端滚动加载的原理和Vue.js里插槽slot的使用方法 Vue.js利用transition实现动画特效 移动端touch时间全解析 CSS3transform实现下拉动画特效 移动端键盘问题总结以及Vue.js的EventBus组件通信 Mongoose关联排序查询讲解 4.个人信息页面的前后端逻辑开发，此模块涉及的知识点如下： Mongoose更新数据updata方法和find方法讲解 Vue-router中的Query的params区别 5.私信聊天页面的前后端逻辑开发，此模块涉及的知识点如下： 移动端常用的滚动方式讲解 移动端键盘和fixed元素问题讲解 Mongoose使用or和and条件查询讲解 Socket.io的用法讲解 6.私信列表页面的前后端逻辑开发，此模块的知识点如下： Vuex里修改store的状态技巧讲解 Mongoose里如何使用模糊查询讲解 第三部分主要讲解了实战项目的性能优化、用户体验优化以及PWA技术的引入，然后是项目的线上部署和相关的运维问题。此模块涉及的知识点如下： 1.Animate.css并结合Vue-router实现页面专场动画2.PWA和Service Worker全方面解析3.Web Push和Web Notification技术讲解4.跨域知识点讲解以及Svg-captcha验证码模块使用5.阿里云服务器部署、Ngin配置、域名申请、PM2使用讲解 在学习本课程之前，你需要掌握一定的前端知识，包括HTML、CSS、javaScript以及Node.js，你可以在w3cchool进行基础知识的学习。另外如果你使用过Vue.js，也可以先学习Vue.js快速上手。 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"前端常见面试题1","date":"2019-10-12T07:02:49.000Z","path":"2019/10/12/jssite/","text":"第一题123456function setName()&#123; name = \"张三\"&#125;setName()console.log('setName')答案： 张三 第二题12345678//考点：1.变量声明提升 2.变量搜索机制var a = 1function test()&#123; console.log(a) var a = 1;&#125;test();答案：undefined 第三题1234567var b = 2;function text2()&#123; window.b=3; console.log();&#125;test2;答案：3 第四题12345678c=5; //声明一个全局变量cfunction test3()&#123; window.c=3; console.log(3) 答案：undefined,原因：由于此时得c是一个局部变量c，并没有被赋值 var c; console.log(window.c); //答案：3,原因：这里得c就是一个全局变量c&#125;test3(); 第五题123456var arr = [];arr[0] = 'a';arr[1] = 'b';arr[10] = 'c';alert(arr.length)//答案：11console.log(arr[5]) //答案：undefined 第六题123var a = 1;console.log(a++); 答案：1console.log(++a); 答案：3 第七题123console.log(null==undefined) //答案：trueconsole.log(\"1\"==1) //答案：true,因为会将数字1先转换为字符串1console.log(\"1\"===1) //答案：false,因为数据类型不一致 第八题12345678typeof 1; \"number\"typeof \"hello\"; \"string\"typeof /[0-9]/; \"object\"typeof&#123;&#125;; \"object\"typeof null; \"object\"typeof undefined; \"undefined\"typeof [1,2,3] \"object\"typeof function()&#123;&#125; //\"function\" 第九题1234parseInt(3.14) //3parseFloat(\"3asdr\") //3parseInt(\"1.23abc456\")parseInt(true); \"true\"NaN 第十题12345678//考题：函数声明提前function bar()&#123; return foo; foo = 10; function foo()&#123;&#125; //var foo = 11;&#125;alert(typeof bar());//\"function\" 第十一题：函数声明提前123456789var foo = 1;function bar()&#123; foo = 10; return; function foo()&#123;&#125;&#125;bar()alert(foo);//答案：1 第十二题1234console.log(a); //是一个函数var a = 3;function a()&#123;&#125;console.log(a) //3 第十三题123456//考点：对arfuments得操作function foo(a)&#123; arguments[0] = 2; alert(a); //答案：2，因为：arguments是对实参得访问，b、通过arguments[i]可以修改指定实参得&#125;foo(1) 第十四题1234function foo(a)&#123; alert(arguments.length);//答案：3，因为arguments是对实参的访问&#125;foo(1,2,3); 第十五题12345678910bar();//报错var foo = function bar()&#123; console.log(\"hello\"+name); console.log(\"bar\");&#125;;//arert(typeof bar);foo(\"world\");//\"hello\"console.log(bar); //undefinedconsole.log(foo.toString());bar();//报错 第十六题：以下执行会有什么输出1234567891011function test()&#123; console.log(\"test 函数\");&#125;setTimeout(function()&#123; console.log(\"定时器回调函数\")&#125;)test();结果：test函数定时器回调函数 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"面试题","slug":"面试题","permalink":"https://chenkun.de/tags/面试题/"}]},{"title":"去input button间距得三种方法","date":"2019-10-08T07:54:20.000Z","path":"2019/10/08/cssbutton/","text":"不去间距 去过间距 如上图所示不去间距得时候input跟button之间会有个小缝隙 这并不是我们想要得方法如下 1.在父级元素上添加font-size:0px;{ font-size:0px }2.删除button 和 input 之间得空格错误 &lt;input type=&quot;text&quot; placeholder=&quot;请输入商家或地点&quot;&gt; &lt;button&gt;按钮&lt;/button&gt; 正确 &lt;input type=&quot;text&quot; placeholder=&quot;请输入商家或地点&quot;&gt;&lt;button&gt;按钮&lt;/button&gt;3.把左方得元素转换成块元素 添加上浮动input{ display:block; float:left; }","tags":[{"name":"css","slug":"css","permalink":"https://chenkun.de/tags/css/"}]},{"title":"webpack安装失败","date":"2019-09-28T13:43:26.000Z","path":"2019/09/28/webpack安装失败/","text":"今天做东西需要到了很久没有用都快忘了得webpack哈哈哈 捣鼓了一会 安装了几次一直安装失败报错内容日如下就One CLI for webpack must be installed. These are recommended choices, delivered as separate packages: - webpack-cli (https://github.com/webpack/webpack-cli) The original webpack full-featured CLI. We will use &quot;npm&quot; to install the CLI via &quot;npm install -D&quot;. Do you want to install &apos;webpack-cli&apos; (yes/no): yes Installing &apos;webpack-cli&apos; (running &apos;npm install -D webpack-cli&apos;)... npm ERR! code EINVALIDPACKAGENAME npm ERR! Invalid package name &quot;_cross-spawn@6.0.5@cross-spawn&quot;: name cannot start with an underscore; name can only contain URL-friendly characters npm ERR! A complete log of this run can be found in: npm ERR! C:\\Users\\Administrator\\AppData\\Roaming\\npm-cache\\_logs\\2019-09-25T02_18_08_557Z-debug.log undefined百度了一下先全局安装webpack和webpack-clinpm install webpack -gnpm install webpack-cli -g再局部安装webpack和webpack-clinpm install webpack –save-devnpm install webpack-cli –save-dev这样就可以了 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"webpack","slug":"webpack","permalink":"https://chenkun.de/tags/webpack/"}]},{"title":"1.小程序页面布局实例详情页","date":"2019-08-26T09:18:47.000Z","path":"2019/08/26/小程序页面布局实例/","text":"页面图片如下图最近在学习微信小程序，下面提供自己做的微信小程序详情页页面，仅供参考。话不多说直接上图 目录结构 下面是代码： list.wxml&lt;view class=&quot;box1&quot;&gt; &lt;view class=&quot;tab-item active&quot;&gt; &lt;text&gt;热销榜&lt;/text&gt; &lt;view class=&quot;tab-line&quot;&gt;&lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;tab-item&quot;&gt; &lt;text&gt;人气榜&lt;/text&gt; &lt;view class=&quot;&quot;&gt;&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;my-tabs-content&quot;&gt; &lt;view class=&quot;content-item&quot;&gt; &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt; &lt;view class=&quot;info&quot;&gt; &lt;view class=&quot;name&quot;&gt; &lt;text&gt;香辣虾尾普通版&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;price-info&quot;&gt; &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt; &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt; &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;original-price-sales&quot;&gt; &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt; &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;content-item&quot;&gt; &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt; &lt;view class=&quot;info&quot;&gt; &lt;view class=&quot;name&quot;&gt; &lt;text&gt;香辣虾尾普通版&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;price-info&quot;&gt; &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt; &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt; &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;original-price-sales&quot;&gt; &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt; &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;content-item&quot;&gt; &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt; &lt;view class=&quot;info&quot;&gt; &lt;view class=&quot;name&quot;&gt; &lt;text&gt;香辣虾尾普通版&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;price-info&quot;&gt; &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt; &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt; &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;original-price-sales&quot;&gt; &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt; &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;content-item&quot;&gt; &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt; &lt;view class=&quot;info&quot;&gt; &lt;view class=&quot;name&quot;&gt; &lt;text&gt;香辣虾尾普通版&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;price-info&quot;&gt; &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt; &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt; &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;original-price-sales&quot;&gt; &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt; &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt;list.wxml.box1{ display: flex; background:#fff; padding-top: 24rpx; flex-direction: row; justify-content: space-between; margin:0 180rpx; padding-bottom: 20rpx; } .box .tab-item{ font-size: 15rpx; color: #999; } .active{ border-bottom: 5rpx solid #353535; } .my-tabs-content{ display: flex; flex-direction: column; background:#fff; } .my-tabs-content .content-item{ display: flex; flex-direction: row; margin-bottom: 46rpx; } .my-tabs-content .content-item .img{ display: flex; flex-direction: row; margin-left: 20rpx; width: 180rpx; height: 180rpx; } .my-tabs-content .content-item .info{ display: flex; flex-direction: column; margin:20rpx; width: 100%; } .my-tabs-content .content-item .info .name,.price-info{ text-align: left; font-size: 15px; color: #000; margin-top: 16rpx; } .my-tabs-content .content-item .info .price-info{ display: flex; flex-direction: row; align-items: center; margin-top:16rpx; } .my-tabs-content .content-item .info .price-info .price{ font-size: 15px; color: #ff3b53; font-weight: bold; } .my-tabs-content .content-item .info .price-info .promotion{ font-size: 12px; font-weight: bold; border: solid 1px #ff3b53; margin-left: 15rpx; padding: 4rpx 6rpx; } .my-tabs-content .content-item .info .price-info .discount{ border-color: #ff3b53; color: #ff3b53; } .my-tabs-content .content-item .info .price-info .postage-included{ border-color: #fb7802; color: #fb7802; } .my-tabs-content .content-item .info .price-info .discount{ border-color: #ff3b53; background: #ff3b53; color: #fff; } .my-tabs-content .content-item .original-price-sales{ display: flex; flex-direction: row; justify-content: space-between; margin-top: 10rpx; font-size: 12px; color: #999; } 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"小程序","slug":"小程序","permalink":"https://chenkun.de/tags/小程序/"}]}]