[{"title":"webapp实战美团开发 05 持续更新.....","date":"2019-11-11T12:37:51.000Z","path":"2019/11/11/webapp05/","text":"这一节我将带着大家来初始化一个前端项目，创建前端项目我们会使用到vue cli 3这个工具，是一个脚手架工具，所谓脚手架就是一个项目初始化的结构，vue cli 3帮助我们规范了项目初期的目录结构，结构配置等等，然后我们可以多把事件花在逻辑层上，减少了繁琐的添加各种配置，但是也不排除我们在项目开发过程中会修改一些配置来满足我们的项目需求。 初始化前端项目首页我们需要安装vue cli来初始化我们的前端项目框架（npm下载很慢大家可以安装一下淘宝镜像cnpm）： npm install -g @vue/cli 然后我们使用vue/cli创建一个项目： wecircle vue create wecircle 选择Manually select features,上下键选择，回车确认，空格选中，表示我们不采用默认的模板，而是根据自己的情况选择需要安装的模块，例如vue-router，ESLint等等。 这一步主要选择我们需要的模块，这里说明一下 Babel：给我们提供了能够使用ES6条件，Babel将我们的ES6代码转换成浏览器兼容性更强的ES5，这意味着，你可以现在就用ES6编写程序，而不用担心现有环境是否支持，基本上现在的项目都会选择它； Router：这里的Router指的是vue-router，属于vue全家桶的一项，我们用它主要是帮助我们实现单页应用的页面路由； Vuex：Vuex是专门为Vue.js设计的状态管理库，它采用集中式存储管理应用的所有组件的状态，同时利用Vuex可以实现跨组件的通信。 Css Pre-processors: CSS的预处理工具选择，列如Sass，Less，stylus，同时默认会集成PostCss，PostCss和他们的区别在于： 1.PostCss是将最后生成的CSS进行处理，包括补充和提供一些而外的功能，比较典型的功能是将我们的CSS样式添加上不同的前缀例如：autoprefixer。2.另外三者称为CSS预处理工具，强调的是提供一些API，让我们编写CSS样式时更加具有代码逻辑，使我们的CSS更加具有组织性，例如可以定义变量等等。 Linter/Formatter：代码规范工具选择，现在主要用的就是ESLint，来帮我们处理代码规范问题。 创建项目的最后一布会看到我们选择的模块清单，这里解释几个地方： history mode：是vue-router的路由模式，我们并没有选择history，而是选择了默认的hash，这样我们可以在url里清晰的看到页面的参数和当前的路径，更加清晰。 where do you prefer placing config for babel…有两个参数ln dedicated config files：单独创建Bable，ESlint的配置文件。ln package.json：将Bable，ESlint这些配置文件继承在package.json里。 我们的项目选择单独的配置文件这种模式，也就是 ln dedicated config files,截图上选择的package.json生成文件之后表现就像下面这样： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&#123; \"name\": \"wecircle\", \"version\": \"0.1.0\", \"private\": true, \"scripts\": &#123; \"serve\": \"vue-cli-service serve\", \"build\": \"vue-cli-service build\", \"lint\": \"vue-cli-service lint\" &#125;, \"dependencies\": &#123; \"core-js\": \"^3.3.2\", \"vue\": \"^2.6.10\", \"vue-router\": \"^3.1.3\", \"vuex\": \"^3.0.1\" &#125;, \"devDependencies\": &#123; \"@vue/cli-plugin-babel\": \"^4.0.0\", \"@vue/cli-plugin-eslint\": \"^4.0.0\", \"@vue/cli-plugin-router\": \"^4.0.0\", \"@vue/cli-plugin-vuex\": \"^4.0.0\", \"@vue/cli-service\": \"^4.0.0\", \"@vue/eslint-config-prettier\": \"^5.0.0\", \"babel-eslint\": \"^10.0.3\", \"eslint\": \"^5.16.0\", \"eslint-plugin-prettier\": \"^3.1.1\", \"eslint-plugin-vue\": \"^5.0.0\", \"less\": \"^3.0.4\", \"less-loader\": \"^5.0.0\", \"prettier\": \"^1.18.2\", \"vue-template-compiler\": \"^2.6.10\" &#125;, \"eslintConfig\": &#123; \"root\": true, \"env\": &#123; \"node\": true &#125;, \"extends\": [ \"plugin:vue/essential\", \"@vue/prettier\" ], \"rules\": &#123;&#125;, \"parserOptions\": &#123; \"parser\": \"babel-eslint\" &#125; &#125;, \"postcss\": &#123; \"plugins\": &#123; \"autoprefixer\": &#123;&#125; &#125; &#125;, \"browserslist\": [ \"&gt; 1%\", \"last 2 versions\" ]&#125; 这里是为了演示package.json的效果，我们的项目里还是使用的单独的配置文件这种模式。 save this as a preset…:表示你是否愿意将这次选择的模块存储成一个模板，一边下次创建项目时，可以直接选择。 OK，到这里我们的项目的初始文件和目录结构就已经完成了，它的目录结构应该是下面这个样子，看起来很清爽有木有，相比vue cli 2减少了很多东西，不过随着我们后面项目的进行，会不断新增代码和逻辑，就像建造一栋大楼，不断添砖加瓦。 123456789101112131415161718├── public // 静态文件目录│ ├── index.html // 首页html├── dist // 打包输出目录（首次打包之后生成）├── src // 项目源码目录│ ├── assets │ ├── components │ ├── views │ ├── App.vue │ ├── main.js │ ├── router.js │ ├── store.js ├── .editorconfig // 编辑器配置项├── .eslintrc.js // eslint 配置项├── .eslintignore.js // eslint 忽略目录├── postcss.config.js // postCss配置项├── babel.config.js // babel配置项├── vue.config.js // 项目配置文件，用了配置或者覆盖默认的配置└── package.json // package.json 启动前端项目打开package.json的script，我们可以看到3个命令：serve、build和lint，分别使用npm run来运行这3个命令效果如下： 启动开发模式：npm run serve 启动生产模式打包：npm run build 启动代码规范检查，处理语法错误： npm run build lint 这三个命令都是基于vue-cli-service提供的命令，我们可以查看更多的配置参数： 1234567#命令：npm run serve其他参数说明：--open 在服务器启动时打开浏览器--copy 在服务器启动时将URL复制到剪切板--mode 指定环境模式（默认值：development）--host 指定host（默认值：0.0.0.0）--port 指定port（默认值：8080）--https 使用https（默认值：false） 12345678910#命令：npm run build其他参数说明：--mode 指定环境模式（默认值：production）--dest 指定输出目录（默认值：dist）--modern 面向现代浏览器带自动回退地构建应用--target app|lib|wc|wc-async（默认值：app）--name 库或Web Components模式下的名字（默认值：packag.json中的\\\"name\\\"字段或入口文件名）--no-clean 在构建项目之前不清除目标目录--report 生成report.html以帮助分析内容--report-json 生成report.json以帮助分析包内容--watch 监听文件变化 123456# 命令：npm run lint 其他参数说明：--format[formatter] 指定一个formatter（默认值：codeframe）--no-fix 不修复错误--no-fix-warnings 除了warnings（警告）错误不修复，其他的都修复--max-errors[limit] 超过多少个错误就标记本次构建失败（默认值：0）--max-warnings[limit] 超过多少个warnings(警告)错误标记本次构建失败（默认值：lnfinity） 通过npx vue-cli-service –help命令查看，会发现有另外一个inspect命令： vue-cli-service inspect，通过这个命令可以得到项目的webapck配置文件，由于vue cli 3将整个默认的webpack配置集成到了内部，所以单独对于webpack配置文件是不便于查看的，使用这个命令可以在当前项目的根目录得到一个webpack.config.xxx.js的配置文件。 npx vue-cli-service inspect–mode 指定环境模式（默认值：development） 小结本章节主要讲解了使用vue cli 3生成我们的项目目录，并介绍了相关的命令配置，为后续的项目打下基础。相关知识点如下：1.前端脚手架的概念解释。2.vue cli 3能够帮助我们生成使用的前端框架，省去了繁琐的配置，但是需要注意的是，基本的配置项还是需要掌握。3.vue-cli-service的命令参数和使用方法。","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"webapp实战美团开发 04 持续更新.....","date":"2019-10-27T03:00:09.000Z","path":"2019/10/27/webapp04/","text":"学习这件事不在乎有没有人教你，最重要的是在于你自己有没有觉悟和恒心。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————达尔文 Chrome DevTools 模拟器移动设备使用Chrome DevTools的Device Mode功能，可以大致了解你的页面在移动设备上呈现的外观和效果，这个是一种非常方便的调试移动端页面的方法。但是需要注意的是，Device Mode的效果和真机的效果也不是100%一样，所以当你的页面在Device Mode测试完成时，别忘了在真机上看看，确保万无一失。点击Toggle Device Toolbar切换设备工具栏，可以打开用于模拟移动设备视口的界面。快捷键F12 或者 ctrl+shift+c可以调出此功能。 移动设备视口模式要模拟特定移动设备尺寸，请从Device列表中选择一个合适模拟设备。想要立即生效，可以刷新一下浏览器。 限制网络流量我们知道，移动端的网络状况时错综复杂的，当然我们在开发移动页面时也要兼容这种情况，Chrome DevTools给我们提供了模拟各种网速的功能：或者按Command+Shift+P（Mas）或Control+Shift+P(Windows、Liunx、Chrome操作系统),以打开命令菜单，输入3G，然后选择Enable fast 3G throttling或Enable slow 3G throttling。其他的面板功能比如Sources，Network等等和PC端的使用方法一致，在这里就不过多解释了。另外在Application里有Service Worker的相关配置和功能将在后面的章节讲解。 rem和vw适配方案比较我们此次的实战项目，主要时一个移动Web项目，那么就不得不提屏幕适配。所谓屏幕适配，说白了就是让我们的移动页面在不同的移动端屏幕下，都能展示出良好的效果，那么当下比较流行的适配方案主要有2个： rem适配方案 vw适配方案这两种适配方案既可以搭配使用，也可以结合Media Query(媒体查询)来使用，达到针对不同屏幕的适配效果。下面来讲讲两者的区别： rem适配方案rem(font size of the root element)是指相对于根元素的字体大小的单位。简单的说它就是要给相关单位。看到rem大家一定会想起em单位，em(font size of the element)是指相对于父元素的字体大小的单位。他们之间其实很相似，只不过计算的规则一个是依赖根元素，一个是依赖父元素。 rem的适配原理：将我们之前写px的单位换成rem单位，然后动态设置根元素html的font-size大小，从而达到适配的目的。 浏览器html默认字体大小(在不修改浏览器字体情况下)是16px，所以默认情况下1rem=16px，但是我们通常需要动态设置html的font-size。 123456789101112/*使用MediaQuery动态设置html的font-size*/@media screen and(max-width:360px)and(min-width:321px)&#123; html&#123; font-size:22px; &#125;&#125;@media screen and (max-width:320px)&#123; html&#123; font-size:30px; &#125;&#125; 12345678//使用javascript动态设置html的font-size：window.addEventListener('resize',function()&#123; //获取视窗宽度 let htmlWidth = document.documentElement.clientWidth || document.boby.clientWidth; //获取html let htmlDom = document.getElementsByTagName('html')[0]; htmlDom.style.fontSize = htmlWidth / 10 + 'px'; //求出基准值&#125;) 实际应用当中，大多数采用的Javascript来动态设置。设置完之后，我们就可以直接利用rem单位来给我们的div或者其他元素设置宽高等一些属性，这里就有一个问题，我们一般拿到Ul给的视觉稿一般是以Iphone6的屏幕设计，这里一个按钮的标注的宽高20*40单位是px，由此我们可以得到： Iphone6的屏幕是375*667单位是px（这个单位可以在使用Chrome DevTools时得到）； 根据上面的JavaScript设置的html的font-size得到是37.5px； 那么根据1rem=37.5px，得到20px=0.53rem，40px=1.06rem。 12345.button&#123; width:0.53rem; height:1.06rem; background-color:red;&#125; 当然，在实际项目中，我们可以使用sass的公式来解决这些繁琐的换算问题： 12345678910@function px2rem($px)&#123; $rem:37.5px; @return ($px/$rem)+rem;&#125;.button&#123; width:px2rem(20); height:px2rem(40); background-color:red;&#125; 好了，关于rem的相关知识，我们先讲到这里。如果大家想了解更多，可以去看一下这个慕课网课程：移动web开发适配秘籍Rem。 VW适配方案vw其实也是一个css单位，类似的还有vh，vmin，vmax共四个单位，这些单位伴随着CSS3的出现就已经有了。但是当时移动Web的浪潮已经来临，并且rem出现的要早，所以很多人忽略了这个。但是rem使用适配是要依赖JavaScript来进行处理（动态设置html根元素的font-size），而vw适配方案完全基于CSS自身。 vw：1vw等于视口宽度的1% vh：1vh等于视口高度的1% vmin：选取vw和vh中最小的那个 vmax：选取vw和vh中最大的那个 视口宽度：表示你在meta里设置的那个宽度： 1&lt;meta name=\"viewport\" content=\"width=device-width\"&gt; 使用document.documentElement.clientWidth可以获取到浏览器的视口大小，这里要注意不一样的是类似window.innerWidth或者window.screen.width这些拿到的是浏览器的物理宽度，当width!=device-width时是不等效的哦。同理我们将Iphone6的Ul搞下，这里一个按钮的标注的宽高是20*40单位是px，转换成vw： 12345.button&#123; width:5.3vw;(20/375*100vw) height:10.6vw;(40/375*100vw) background-color:red;&#125; 同理，你可能也需要要给sass公式来解决繁琐的换算问题： 123@function vw($px)&#123; @return ($px/375) * 100vw;&#125; 那么vw方案相比rem优势在于，不需要JavaScript来动态设置html根元素的font-size；劣势在于浏览器兼容性不如rem。 rem兼容性： vw兼容性： 由于现在市面上Android4.4以下的机型还占有一定的比例（9%左右），这个量还是不容忽视的，这也是现在vw适配方案没有rem流行的主要原因之一。好在既然所有最新浏览器都已经支持vw，那么随着事件推移，相信vw未来必将会流行。 postcss-px-to-viewport适配前面说了那么多理论知识，那么下面就回到我们的实战项目中。本次实战项目采用vw适配方案（因为rem的适配方案用的太多，尝试以下心的vw方案），使用postcss的postcss-px-to-viewport插件来帮我们进行px和vw之间的转换。 12#安装postcss-px-to-viewport:npm install postcss-px-to-viewport --save 在postcss.config.js添加配置： 123456789\"postcss-px-to-viewport\":&#123; viewportWidth:375, //视窗的宽度,对应的是我们设计稿的宽度，Iphone6的一般是375(xx/375*10vw) viewportHeight:667, //视窗的高度，Iphone6的一般是667 unitPrecision:3, //指定'px'转换为视窗单位值得小数位数（很多时候无法整除） viewportUnit:\"vw\", //指定需要转换成得视窗单位，建议使用vw selectorBlackList:['.ignore','.hairlines'], //指定不转换为视窗单位得类，可以自定义，可以无限添加，建议定义一至两个通用得类名 minPixelValue:1, //小于或等于'1px'不转换为视窗单位，你也可以设置为你想要得值 midiaQuery:false //允许在媒体查询中转换 'px'&#125; 设置之后，我们在项目里直接写px单位，然后postCss就可以帮我们转换成vw单位，很方面有木有。 1234567.name-info&#123; position:absolute; right:12px; top:12px; border-radius: 5px; display:flex;&#125; 实际效果： 同时，我们把autoprefixer也默认配置上去： 12345678module.exports = &#123; plugins:&#123; autoprefixer:&#123;&#125;, 'postcss-px-to-viewport':&#123; *** &#125; &#125;&#125; 小结本章节主要给大家介绍了Chrome DevTools模拟移动设备和移动端得常见适配方案，包括rem适配和vw适配，同时比较了两者得差别和优劣。另外在项目里引入postcss-px-to-viewport来帮助我们解决单位转换为题。","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"webapp实战美团开发 03 持续更新.....","date":"2019-10-26T14:50:36.000Z","path":"2019/10/26/webapp03/","text":"能生存下来的物种，并不是那些最强壮的，也不是那些最聪明的，而是那些对变化作出快速反应的&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————达尔文 工欲善其事必先利其器。在开发一个完整的项目之前，准备一个完整的开发环境是非常重要的。当然如果你是前端大佬，可能这些环境早已用的滚瓜烂熟；但是如果你是刚入坑前端，就跟着我一步一步把环境搭建起来； 1.安装代码编辑器Sublime Text 3下载地址 https://www.sublimetext.com/3,可以选择自己的操作系统平台进行安装。 谈谈代码编辑器的选择当前流行的代码编辑器主要有： Visual Studio Code,Sublime Text,WebStorm三种，笔者觉得代码编辑器完全由自己的喜好和习惯决定，并没有一个完全正确的，正所谓萝卜青菜各有所爱。从当前的趋势看来，Visual Studio Code 的使用者更多一些，这可能是得益于精美的界面风格和完善的插件生态，笔者之前也是一直用的这款编辑器；WebStorm的功能也很强大，但是太过笨重。这次之所以没有用这两个而是选择Sublime Text，是为了体验一下新鲜的事物，总有点喜新厌旧的感觉。从效果上来看，Sublime Text更加轻便，如果长时间操作，也不会有卡顿的感觉。 2.下载Node.js下载地址Node.js安装的时候注意要选择Add to PATH，这样才能在命令行终端使用node命令。安装完了Node.js之后就有了Npm包管理工具，但是鉴于国内的一些网络问题，可以选择使用CNPM(淘宝镜像)来安装相关的模板，在后面的项目实战中我们会使用cnpm来安装我们的项目依赖。 npm install -g cnpm –registry=https://registry.npm.taobao.org 3.下载安装MongoDB下载地址：MongoDB,在Server选项下，选择自己操作系统平台的进行安装。window安装界面：一路下一步，选择合适的安装目录。注意这里lnstall MongoDB Compass(可视化工具),勾选这个选项会下载一个MongoDB的可视化工具，如果网络情况不太好的话可能会花很长的时间，所以不建议勾选。可以选择一个基于Node.js开发的MongoDB可视化工具adminmongo 启动和关闭MongoDB安装完MongoDB后，以管理模式启动CMD，切换到MongoDB的安装目录，并执行命令： mongo.exe –dbpath &quot;D:\\mongodb\\data\\db&quot; –logpath &quot;D:\\mongodb\\logs\\log.txt&quot; -dbpath:指定数据库文件的存放路径，\\data\\db路径没有的话需要自己新建一个 -logpath:指定了日志文件的存放路径。此方法在当前的窗口启动MongoDB，使用ctrl+c即可结束服务；如果想让服务器长期在后台运行，可以使用： mongod.exe –dbpath “D:\\mongodb\\data\\db” –logpath “D:\\mongodb\\logs\\log.txt” –install -serviceName “MongoDB” -install:指定作为一个Windows服务安装然后执行启动命令： net start MongoDB停止命令：net stop MongoDB 安装adminmongoadminmongo是一个MongoDB的基于网页版的可视化管理工具，使用方便，安装简单。可以直接在GitHub上下载使用，Github地址:adminmongo。使用git或者是下载源码zip： git clone https://github.com/mrvautin/adminMongo.git 安装相关模块 cd adminMongocnpm install 启动服务： npm start 访问http://127.0.0.1:1234即可使用，第一次使用时需要配置MongoDB数据库connection，这个我们会在后面讲解。 小结本章主要讲解了环境准备工作，包括代码编辑器的Sublime Text的安装，以及相关编辑器的介绍，Node.js安装和MongoDB安装和使用方法。到这里我们的开发环境就已经搭建完成了，后面我们来看下屏幕适配方案的选择。微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"前端常见面试题2","date":"2019-10-16T09:17:26.000Z","path":"2019/10/16/site/","text":"生活的理想，就是为了理想的生活&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;————张闻天 介绍一下CSS盒子模型1.盒模型：内容（content）、填充（padding）、边界（margin）、边框（border）2.有两种，IE盒子模型、标准W3C盒子模型；IEcontent部分包含了border、padding js中有哪些内置函数object Array bollean number string function date regexp error ==和===之间的区别？==：运算符称作相等，用来检测两个操作数是否相等，这里的相等定义的非常宽松，可以允许进行类型转换===：用来检测两个操作是否严格相等1.对于string，number等基础类型，==和===是有区别的不同类型间比较，==之比较”转化成同一类型的值”看”值”是否相等，===如果类型不同，其结果就是不等同类型比较，直接进行”值”比较，两者结果一样2.对Array,Object等高级类型，==和===是没有区别的3.基础类型于高级类型，==和===是有区别的对于==，将高级转化为基础类型，进行”值”比较，因为类型不同，===false 2+2+’2’和’2’+2+2的结果？4 222 break和continue语句的作用？Break语句从当前循环中退出。continue语句继续下一个循环语句。 运行结果123456for(var i=0;i&lt;5;i++)&#123; setTimeout(function()&#123; console.log(i) &#125;,1000)&#125;console.log(i) 5个5 写出几种减少页面加载时间的方法1.优化图片2.图像格式的选择（GIF：提供的颜色较少，可用在一些对颜色要求不高的地方）3.优化CSS（压缩CSS，如margin-top，margin-left…）4.网址后加斜杠（如www.campr.com/目录，会判断这个”目录是什么文件类型，或者是目录。）5.标明高度和宽度（如果浏览器没有找到这两个参数，它需要一边下载图片一边计算大小，如果图片很多，浏览器需要不断地调整页面。这不但影响速度，也影响浏览体验。 当浏览器知道了高度和宽度参数后，即使图片暂时无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载时间快了，浏览体验也更好了。）6.减少http请求（合并文件，合并图片）。 innerHTML 和innerText : 区别innerHTML： 1.innerHTML会将标签和标签中的内容获取出来 2.innerHTML .innerHTML=&#39;&lt;p&gt;&lt;/p&gt;&#39;;只会将文本内容解析出来，不会显示标签innerText。 1.innerText只会将标签中的内容获取出来，不会获取标签 2.innerText有参数，.innerText=&#39;&lt;p&gt;&lt;/p&gt;&#39;，会将标签和内容都解析到网页中 使用一种排序方法实现排序方法1：添加Array原生方法 123456Array.prototype.sort2 = function()&#123; //实现数字升序 this.sort(function(a,b)&#123; return a - b; &#125;)&#125; 方法2：不写原生方法 1234var arr = [1,4,8,2,11,7,3,5];arr.sort(function(a,b)&#123; return a - b;&#125;) 数组去重var ary = [12,8,12,78,8,35,25,35];1.过滤器和indexof 12345var ary = [12,8,12,78,8,35,25,35];var ary2 = ary.filter(function(element,index,self)&#123; return self.indexOf(element) === index;&#125;)console.log(ary2) 2.利用se6的set方法 123var ary = [12,8,12,78,8,35,25,35];var ary2 = Array.from(new Set(ary));console.log(ary2) 这里的方法很多 我就不各个列出来了 感兴趣的可以自行百度 (可写伪代码)不借助临时变量，进行两个整数的交换：a=3,b=412345678910function swao(a,b)&#123; b = a + b a = b - a b = b - a return [a,b]&#125;//b = a + b ==&gt; b 相当于 (a + b)//a = b - a ==&gt; 由上可得 a = (a + b) - a 得到 a = b//b = b - a ==&gt; 由上可得 b = (a + b) - b 得到 b = a//交换成功~ 解释：栈、堆、队列队列只能在队头做删除操作，在队尾做插入操作。而栈只能在栈顶做插入和删除操作 栈就是一个桶，后放进去的先拿出来，它下面本来有的东西要等它出来之后才能出来 堆是在程序运行时，而不是在程序编译时，申请某个大小的内存空间。即动态分配内存，对其访问和对一般内存的访问没有区别。{堆是指程序运行是申请的动态内存，而栈只是指一种使用堆的方法（即先进后出）。}栈是先进后出，但是于堆而言却没有这个特性，两者都是存放临时数据的地方。对于堆，我们可以随心所欲的进行增加和删除变量，不要遵循什么次序，只要你喜欢。 解释：浅拷贝和深拷贝1.浅拷贝：将原对象或原数组的引用直接赋值给新对象，新数组，新对象/数组只是原对象的一个引用2.深拷贝：创建一个新的对象和数组，将原对象的各项属性的&quot;值&quot;(数组的所有元素)拷贝过来，是&quot;值&quot;而不是&quot;引用&quot;网上答案很多 我挑了一个容易懂得想要了解更多的可以自行百度哦(溜了…) （逻辑题）分金条问题问题：有个商人雇用了一位手艺高超的工匠了为他做一个精致产品，工作一星期七天的代价是一条金条。商人手头上有一条金条，刚好有可以付工匠一星期的工钱。但工匠要求工钱要按每天来付。虽然他并不急着用钱，每天有钱进账，老人心里总是踏实一些。但商人家中有个规矩，金条每星期只能切二刀。后来商人想出以了个切割金条的办法，满足了工匠的要求。你知道商人是怎么切割金条才能满足工匠的吗？答案：切成1、2、4。解释：这三个二进制数的组合能表示0-7中的任何一个。 （逻辑题）有两根不均匀分布的香，香烧完的时间是一个小时，你能用什么方法来确定一段15分钟的时间？ 先将香A一头点燃，香B两头点然，等香B烧完之后，说明时间过去了半个小时 还剩半个小时，这时 再将香A的另一头也点燃，香A两头同时燃烧的这段时间就是15分钟。 说说flex布局Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状提供最大的灵活性。任何一个容器都可以指定为Flex布局。行内元素也可以使用Flex布局。采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。以下有6个属性设置在容器上flex-direction flex-wrap flex-flow justify-content align-items align-content每个人的理解都不一样这里就不过多说了 split() join() 的区别join() 方法用于把数组中的所有元素放在一个字符串。元素是通过指定的分隔符进行分割的。 1234567&lt;script&gt; var a=new Array(); a[0]=\"XHTML\"; a[1]=\"CSS\"; a[2]=\"JavaScript\"; alert(a.join(\"#\")); //XHTML#css#JavaScript&lt;/script&gt; split(a,b)方法用于把一个字符串分割成字符串数组。a是必须的，决定个从a这里开始分割b不是必须的，可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。注意返回的数组中不包括a本身； 12345var str=\"how are you?\";document.write(str.split(\"\")+\"&lt;br /&gt;\");//h,o,w, ,a,r,e, ,y,o,u,?document.write(str.split(\"a\")+\"&lt;br /&gt;\");//how ,re you? 不包含a本身document.write(str.split(\" \")+\"&lt;br /&gt;\");//how,are,you?document.write(str.split(\"\",3)+\"&lt;br /&gt;\");//h,o,w get和post的区别 请求方式 GET post 参数位置 url的query中 一般在content中，query也可 参数大小 受限于浏览器url大小，一般不超过32k 1G 服务器数据接收 接收一次 根据数据大小，可分多次接收 适用场景（语义） 从服务器端获取数据不做增删改 想服务器提交数据，如做增删改操作 安全性 参数携带在url中，安全性低 相对于GET请求，安全性更高 说说Base64可以将任意的字节数据，通过算法，生成只有(大小写英文、数字、+、/)(一共64字符)内容表示的字符串数据。即将任意的内容转换为可见的字符串形式Base64算法的特点：1.将数据按照3个字节一组的形式进行处理，每三个字节在编码之后被转换为4个字节。2.当数据的长度无法满足3的倍数的情况下，最后的数据需要进行填充操作，即补&quot;=&quot;，这里&quot;=&quot;是填充字符，不要理解为第65个字符 什么是cookie1.Cookie是浏览器访问服务器后，服务器传给浏览器得一段数据。2.浏览器需要保存这段数据，不得轻易删除。3.此后每次浏览器访问服务器，都必须带上得这段数据。","tags":[{"name":"面试题","slug":"面试题","permalink":"https://chenkun.de/tags/面试题/"}]},{"title":"webapp实战美团开发 02 持续更新.....","date":"2019-10-14T07:54:12.000Z","path":"2019/10/14/webapp02/","text":"项目技术栈介绍1.前端框架Vue.js和全家桶 说到Vue.js相信大家都不会陌生，可以说是当前国内最流行的前端框架MVVM框架，本次项目也会采用Vue.js@2.6.10 版本来进行开发，其中包括了vue-router,vuex。当然为了照顾一些Vue.js的初学者，在后面的实战代码编写中，会穿插讲解其相关的知识点。 2.前端脚手架工具Vue Cli 3Vue Cli是基于Vue.js的前端项目脚手架生成工具，现在主要用的有两个版本，Vue Cli 2 和Vue Cli 3，折两个版本的cli生成的项目目录和相关配置都不太一样，本次实战将会采用最新的Vue Cli 3版本。 3.前端UL框架WuUIWeUI是一套微信视觉体验一致的基础杨式库，由微信官方设计团队为微信网页和微信小程序量身设计，我们采用WeUI主要是为了让我们的页面风格更贴近微信的风格。 4.前端动画效果Animate.css[Animate.css]是一个使用CSS3的animatin制作的动画效果的开源CSS效果集合，里面预设了很多种常用的动画，且使用非常简单，我们在项目中主要用来实现一些特效动画，以及结合vue-router实现各种页面转场效果。 5.Node.js和ExpressNode.js我就不多说了，它为前端工程师打开了后端的大门。Express是一个保持最小规模的灵活的Node.js web应用程序开发框架（说白了就是后端的MAC框架，如果大家接触过Java的SSH，或者是SSM应该很好理解），为web和移动应用程序提供了一组强大的功能。优点在于灵活，结合Express Generator，可以轻松的实现后端项目框架，我们在项目中的后台逻辑都是基于Express来编写，包括路由控制，API管理，数据库封装，以及登陆效验，以及登陆效验，状态保存等等。 6.后端数据库MongoDBMongoDB是一个基于分布式文件存储的数据库，是当前NoSQL数据库产品中最热门的一种。我们实战项目的数据库建模包括Post表、User表、Chat表等等，都是借助于mongoose是MongoDB的一个对象模型工具，封装了MongoDB对文档的一些增删改查等常用方法，让Node.js操作MongoDB数据库变得更加容易（说白了就是用面向对象的思想去操作数据库，而且还没有关系型数据库的.sql脚本，用起来更加轻便）。所以我们的后端技术栈可以理解为：Node.js+Express+MongoDB 7.PWA离线应用PWA（progressing web app），渐进式网页应用程序，是Google在2016年Google/O大会上提出的下一代web应用模型，并在随后的日子里迅速发展。一个PWA应用首先是一个网页，可以通过web技术编写一个网页应用。随后添加上App Manifest 和 Service Worker来实现PWA的安装和离线等功能。我们在项目的收尾阶段，会将项目构建成一个PWA应用，看起来更像是”APP”。 8.阿里云部署为了使大家掌握更加完整的项目部署相关知识，我们的实战项目将会真实的部署在阿里云上面，同时会教大家：购买阿里云———&gt;配置FTP功能———&gt;配置pm2管理工具———&gt;项目发布的一条龙服务。让大家真实的体会到自己的项目在线上环境中的运行。 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"webapp实战美团开发 01  持续更新.....","date":"2019-10-13T02:33:44.000Z","path":"2019/10/13/webapp01/","text":"最近在慕课网上学了一个实战课程，觉得还是蛮使用的可以提升一下，就跟大家分享一下。也是为了巩固知识点嘻嘻😄。主攻web前端开发，移动web方向（也叫HTML5业务，一个坑很多的领域），这个课程主要是webapp美团开发实战，这个课程主要使用移动web技术于Hybrid技术去开发移动WebApp，结合React全家桶技术作为前端框架 ，是一个前端项目的课程。 本次课程是一个结合Vue.js和移动web开发，以及Node.js和MongoDb开发实现的全栈项目，并且会采用阿里云相关的服务来实现真正能上线体验的真实企业级业务。 相信作为一个前端工程师来讲，你或多或少都回接触一些工作上的业务，并且在工作之余写过一下demo来丰富自己的技术范围，但是一个真正和企业级项目和一般的练手项目有某些方面还是有不少区别的： 1.服务器的申请和相关域名的申请，你以及Nginx的配置等相关的一些运维工作、短信和图床存储等公共第三方服务的选择；2.前端页面的兼容性问题，比如移动端web项目，你可能需要至少5款Android和IOS手机来测试兼容性和适配性，以及在代码编写过程中，也要区分不同机型，因为不同机型可能有着不同的逻辑；3.后端相关的部署上，保证服务的高效性和稳定性，比如如何进行管理，负载均衡等问题。 保持一个严谨的态度是一个企业级项目必不可少的。除此以外，不管你是一个初级前端的小白玩家，还是要给混迹多年的前端大佬，Vue.js及相关的技术栈作为现在最流行的前端框架之一，如何在项目中充分的使用它们；移动web开发技术和传统的PC开发到底有何区别；如何进行屏幕适配；如何在移动端开发高效的CSS3动画等；在使用Node.js和Express框架开发后台接口时，如何对数据建模；如何实现用户认证，权限效验；如何利用ScoKet.io开发高并发的聊天接口；MongoDB和Mongoose到底有什么区别；如何使用Mongose进行复杂数据的高效增删改查；如何结合当下流行的PWA技术让项目的用户体验像一个真正的WebApp，结合阿里云服务如何进行真实的线上发版和部署，这些问题我都会一一为大家解答。 课程主要分为三大部分： 第一部分： 在功能上主要讲解相关技术栈和相关环境的搭建和准备工作。其中包括知识点： 1.页面适配方案对比（rem和vm）；2.Vue cli3和Express-generator使用讲解；3.Chrome模拟器的简单使用 第二部分 主要讲解了实战项目的页面逻辑开发。 1.登陆页面逻辑和后端开发，此模块涉及的知识点如下： WuUl使用讲解 如何在项目中使用Vuex SE7的async和await的使用技巧 如何在Express框架中集成用户效验JSON Web Token 机制 使用第三方阿里云短信服务完成登陆验证 2.发布页面的前后端逻辑开发，以及移动端图片上传功能，此模块涉及的知识点如下： 企业级阿里云图片服务如何接入 HTML5的input使用技巧讲解 Mongoose的多表关联讲解 3.朋友圈首页的前后端逻辑开发，以及各种下拉刷新功能、图片查看器功能、底部键功能等开发，此模块涉及的知识点如下： 移动端滚动加载的原理和Vue.js里插槽slot的使用方法 Vue.js利用transition实现动画特效 移动端touch时间全解析 CSS3transform实现下拉动画特效 移动端键盘问题总结以及Vue.js的EventBus组件通信 Mongoose关联排序查询讲解 4.个人信息页面的前后端逻辑开发，此模块涉及的知识点如下： Mongoose更新数据updata方法和find方法讲解 Vue-router中的Query的params区别 5.私信聊天页面的前后端逻辑开发，此模块涉及的知识点如下： 移动端常用的滚动方式讲解 移动端键盘和fixed元素问题讲解 Mongoose使用or和and条件查询讲解 Socket.io的用法讲解 6.私信列表页面的前后端逻辑开发，此模块的知识点如下： Vuex里修改store的状态技巧讲解 Mongoose里如何使用模糊查询讲解 第三部分主要讲解了实战项目的性能优化、用户体验优化以及PWA技术的引入，然后是项目的线上部署和相关的运维问题。此模块涉及的知识点如下： 1.Animate.css并结合Vue-router实现页面专场动画2.PWA和Service Worker全方面解析3.Web Push和Web Notification技术讲解4.跨域知识点讲解以及Svg-captcha验证码模块使用5.阿里云服务器部署、Ngin配置、域名申请、PM2使用讲解 在学习本课程之前，你需要掌握一定的前端知识，包括HTML、CSS、javaScript以及Node.js，你可以在w3cchool进行基础知识的学习。另外如果你使用过Vue.js，也可以先学习Vue.js快速上手。 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"webapp","slug":"webapp","permalink":"https://chenkun.de/tags/webapp/"}]},{"title":"前端常见面试题1","date":"2019-10-12T07:02:49.000Z","path":"2019/10/12/jssite/","text":"第一题123456function setName()&#123; name = \"张三\"&#125;setName()console.log('setName')答案： 张三 第二题12345678//考点：1.变量声明提升 2.变量搜索机制var a = 1function test()&#123; console.log(a) var a = 1;&#125;test();答案：undefined 第三题1234567var b = 2;function text2()&#123; window.b=3; console.log();&#125;test2;答案：3 第四题12345678c=5; //声明一个全局变量cfunction test3()&#123; window.c=3; console.log(3) 答案：undefined,原因：由于此时得c是一个局部变量c，并没有被赋值 var c; console.log(window.c); //答案：3,原因：这里得c就是一个全局变量c&#125;test3(); 第五题123456var arr = [];arr[0] = 'a';arr[1] = 'b';arr[10] = 'c';alert(arr.length)//答案：11console.log(arr[5]) //答案：undefined 第六题123var a = 1;console.log(a++); 答案：1console.log(++a); 答案：3 第七题123console.log(null==undefined) //答案：trueconsole.log(\"1\"==1) //答案：true,因为会将数字1先转换为字符串1console.log(\"1\"===1) //答案：false,因为数据类型不一致 第八题12345678typeof 1; \"number\"typeof \"hello\"; \"string\"typeof /[0-9]/; \"object\"typeof&#123;&#125;; \"object\"typeof null; \"object\"typeof undefined; \"undefined\"typeof [1,2,3] \"object\"typeof function()&#123;&#125; //\"function\" 第九题1234parseInt(3.14) //3parseFloat(\"3asdr\") //3parseInt(\"1.23abc456\")parseInt(true); \"true\"NaN 第十题12345678//考题：函数声明提前function bar()&#123; return foo; foo = 10; function foo()&#123;&#125; //var foo = 11;&#125;alert(typeof bar());//\"function\" 第十一题：函数声明提前123456789var foo = 1;function bar()&#123; foo = 10; return; function foo()&#123;&#125;&#125;bar()alert(foo);//答案：1 第十二题1234console.log(a); //是一个函数var a = 3;function a()&#123;&#125;console.log(a) //3 第十三题123456//考点：对arfuments得操作function foo(a)&#123; arguments[0] = 2; alert(a); //答案：2，因为：arguments是对实参得访问，b、通过arguments[i]可以修改指定实参得&#125;foo(1) 第十四题1234function foo(a)&#123; alert(arguments.length);//答案：3，因为arguments是对实参的访问&#125;foo(1,2,3); 第十五题12345678910bar();//报错var foo = function bar()&#123; console.log(\"hello\"+name); console.log(\"bar\");&#125;;//arert(typeof bar);foo(\"world\");//\"hello\"console.log(bar); //undefinedconsole.log(foo.toString());bar();//报错 第十六题：以下执行会有什么输出1234567891011function test()&#123; console.log(\"test 函数\");&#125;setTimeout(function()&#123; console.log(\"定时器回调函数\")&#125;)test();结果：test函数定时器回调函数 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"面试题","slug":"面试题","permalink":"https://chenkun.de/tags/面试题/"}]},{"title":"去input button间距得三种方法","date":"2019-10-08T07:54:20.000Z","path":"2019/10/08/cssbutton/","text":"不去间距 去过间距 如上图所示不去间距得时候input跟button之间会有个小缝隙 这并不是我们想要得方法如下 1.在父级元素上添加font-size:0px;{ font-size:0px }2.删除button 和 input 之间得空格错误 &lt;input type=&quot;text&quot; placeholder=&quot;请输入商家或地点&quot;&gt; &lt;button&gt;按钮&lt;/button&gt; 正确 &lt;input type=&quot;text&quot; placeholder=&quot;请输入商家或地点&quot;&gt;&lt;button&gt;按钮&lt;/button&gt;3.把左方得元素转换成块元素 添加上浮动input{ display:block; float:left; }","tags":[{"name":"css","slug":"css","permalink":"https://chenkun.de/tags/css/"}]},{"title":"webpack安装失败","date":"2019-09-28T13:43:26.000Z","path":"2019/09/28/webpack安装失败/","text":"今天做东西需要到了很久没有用都快忘了得webpack哈哈哈 捣鼓了一会 安装了几次一直安装失败报错内容日如下就One CLI for webpack must be installed. These are recommended choices, delivered as separate packages: - webpack-cli (https://github.com/webpack/webpack-cli) The original webpack full-featured CLI. We will use &quot;npm&quot; to install the CLI via &quot;npm install -D&quot;. Do you want to install &apos;webpack-cli&apos; (yes/no): yes Installing &apos;webpack-cli&apos; (running &apos;npm install -D webpack-cli&apos;)... npm ERR! code EINVALIDPACKAGENAME npm ERR! Invalid package name &quot;_cross-spawn@6.0.5@cross-spawn&quot;: name cannot start with an underscore; name can only contain URL-friendly characters npm ERR! A complete log of this run can be found in: npm ERR! C:\\Users\\Administrator\\AppData\\Roaming\\npm-cache\\_logs\\2019-09-25T02_18_08_557Z-debug.log undefined百度了一下先全局安装webpack和webpack-clinpm install webpack -gnpm install webpack-cli -g再局部安装webpack和webpack-clinpm install webpack –save-devnpm install webpack-cli –save-dev这样就可以了 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"webpack","slug":"webpack","permalink":"https://chenkun.de/tags/webpack/"}]},{"title":"1.小程序页面布局实例详情页","date":"2019-08-26T09:18:47.000Z","path":"2019/08/26/小程序页面布局实例/","text":"页面图片如下图最近在学习微信小程序，下面提供自己做的微信小程序详情页页面，仅供参考。话不多说直接上图 目录结构 下面是代码： list.wxml&lt;view class=&quot;box1&quot;&gt; &lt;view class=&quot;tab-item active&quot;&gt; &lt;text&gt;热销榜&lt;/text&gt; &lt;view class=&quot;tab-line&quot;&gt;&lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;tab-item&quot;&gt; &lt;text&gt;人气榜&lt;/text&gt; &lt;view class=&quot;&quot;&gt;&lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;my-tabs-content&quot;&gt; &lt;view class=&quot;content-item&quot;&gt; &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt; &lt;view class=&quot;info&quot;&gt; &lt;view class=&quot;name&quot;&gt; &lt;text&gt;香辣虾尾普通版&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;price-info&quot;&gt; &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt; &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt; &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;original-price-sales&quot;&gt; &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt; &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;content-item&quot;&gt; &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt; &lt;view class=&quot;info&quot;&gt; &lt;view class=&quot;name&quot;&gt; &lt;text&gt;香辣虾尾普通版&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;price-info&quot;&gt; &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt; &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt; &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;original-price-sales&quot;&gt; &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt; &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;content-item&quot;&gt; &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt; &lt;view class=&quot;info&quot;&gt; &lt;view class=&quot;name&quot;&gt; &lt;text&gt;香辣虾尾普通版&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;price-info&quot;&gt; &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt; &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt; &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;original-price-sales&quot;&gt; &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt; &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class=&quot;content-item&quot;&gt; &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt; &lt;view class=&quot;info&quot;&gt; &lt;view class=&quot;name&quot;&gt; &lt;text&gt;香辣虾尾普通版&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;price-info&quot;&gt; &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt; &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt; &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt; &lt;/view&gt; &lt;view class=&quot;original-price-sales&quot;&gt; &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt; &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt; &lt;/view&gt;list.wxml.box1{ display: flex; background:#fff; padding-top: 24rpx; flex-direction: row; justify-content: space-between; margin:0 180rpx; padding-bottom: 20rpx; } .box .tab-item{ font-size: 15rpx; color: #999; } .active{ border-bottom: 5rpx solid #353535; } .my-tabs-content{ display: flex; flex-direction: column; background:#fff; } .my-tabs-content .content-item{ display: flex; flex-direction: row; margin-bottom: 46rpx; } .my-tabs-content .content-item .img{ display: flex; flex-direction: row; margin-left: 20rpx; width: 180rpx; height: 180rpx; } .my-tabs-content .content-item .info{ display: flex; flex-direction: column; margin:20rpx; width: 100%; } .my-tabs-content .content-item .info .name,.price-info{ text-align: left; font-size: 15px; color: #000; margin-top: 16rpx; } .my-tabs-content .content-item .info .price-info{ display: flex; flex-direction: row; align-items: center; margin-top:16rpx; } .my-tabs-content .content-item .info .price-info .price{ font-size: 15px; color: #ff3b53; font-weight: bold; } .my-tabs-content .content-item .info .price-info .promotion{ font-size: 12px; font-weight: bold; border: solid 1px #ff3b53; margin-left: 15rpx; padding: 4rpx 6rpx; } .my-tabs-content .content-item .info .price-info .discount{ border-color: #ff3b53; color: #ff3b53; } .my-tabs-content .content-item .info .price-info .postage-included{ border-color: #fb7802; color: #fb7802; } .my-tabs-content .content-item .info .price-info .discount{ border-color: #ff3b53; background: #ff3b53; color: #fff; } .my-tabs-content .content-item .original-price-sales{ display: flex; flex-direction: row; justify-content: space-between; margin-top: 10rpx; font-size: 12px; color: #999; } 微信：ck2211314 做的不好还请多指教感谢 有需要到我得地方 可以加我微信 也可以交个朋友","tags":[{"name":"小程序","slug":"小程序","permalink":"https://chenkun.de/tags/小程序/"}]}]