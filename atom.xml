<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>有理想的咸鱼</title>
  
  <subtitle>十年磨一剑</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-28T02:24:03.836Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>陈坤</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1.小程序页面布局实例详情页</title>
    <link href="http://yoursite.com/2019/08/26/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/08/26/小程序页面布局实例/</id>
    <published>2019-08-26T09:18:47.000Z</published>
    <updated>2019-08-28T02:24:03.836Z</updated>
    
    <content type="html"><![CDATA[<h5 id="页面图片如下图"><a href="#页面图片如下图" class="headerlink" title="页面图片如下图"></a>页面图片如下图</h5><p>最近在学习微信小程序，下面提供自己做的微信小程序详情页页面，仅供参考。<br>话不多说直接上图</p><p><img src="https://raw.githubusercontent.com/chenkuna/chenkuna.github.io/master/img/2019-08-27_120436.png" alt="markdown" title="markdown"></p><h5 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h5><p>下面是代码：</p><h5 id="list-wxml"><a href="#list-wxml" class="headerlink" title="list.wxml"></a>list.wxml</h5><pre><code>&lt;view class=&quot;box1&quot;&gt;  &lt;view class=&quot;tab-item active&quot;&gt;      &lt;text&gt;热销榜&lt;/text&gt;      &lt;view class=&quot;tab-line&quot;&gt;&lt;/view&gt;  &lt;/view&gt;  &lt;view class=&quot;tab-item&quot;&gt;      &lt;text&gt;人气榜&lt;/text&gt;      &lt;view class=&quot;&quot;&gt;&lt;/view&gt;  &lt;/view&gt;&lt;/view&gt;&lt;view class=&quot;my-tabs-content&quot;&gt;  &lt;view class=&quot;content-item&quot;&gt;      &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt;      &lt;view class=&quot;info&quot;&gt;          &lt;view class=&quot;name&quot;&gt;              &lt;text&gt;香辣虾尾普通版&lt;/text&gt;          &lt;/view&gt;          &lt;view class=&quot;price-info&quot;&gt;              &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt;              &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt;              &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt;          &lt;/view&gt;           &lt;view class=&quot;original-price-sales&quot;&gt;              &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt;              &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt;          &lt;/view&gt;      &lt;/view&gt;  &lt;/view&gt;   &lt;view class=&quot;content-item&quot;&gt;      &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt;      &lt;view class=&quot;info&quot;&gt;          &lt;view class=&quot;name&quot;&gt;              &lt;text&gt;香辣虾尾普通版&lt;/text&gt;          &lt;/view&gt;          &lt;view class=&quot;price-info&quot;&gt;              &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt;              &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt;              &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt;          &lt;/view&gt;           &lt;view class=&quot;original-price-sales&quot;&gt;              &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt;              &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt;          &lt;/view&gt;      &lt;/view&gt;  &lt;/view&gt;  &lt;view class=&quot;content-item&quot;&gt;      &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt;      &lt;view class=&quot;info&quot;&gt;          &lt;view class=&quot;name&quot;&gt;              &lt;text&gt;香辣虾尾普通版&lt;/text&gt;          &lt;/view&gt;          &lt;view class=&quot;price-info&quot;&gt;              &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt;              &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt;              &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt;          &lt;/view&gt;           &lt;view class=&quot;original-price-sales&quot;&gt;              &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt;              &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt;          &lt;/view&gt;      &lt;/view&gt;  &lt;/view&gt;  &lt;view class=&quot;content-item&quot;&gt;      &lt;view&gt;&lt;image class=&quot;img&quot; src=&quot;../../images/d1.jpg&quot;&gt;&lt;/image&gt;&lt;/view&gt;      &lt;view class=&quot;info&quot;&gt;          &lt;view class=&quot;name&quot;&gt;              &lt;text&gt;香辣虾尾普通版&lt;/text&gt;          &lt;/view&gt;          &lt;view class=&quot;price-info&quot;&gt;              &lt;text class=&quot;price&quot;&gt;$17&lt;/text&gt;              &lt;text class=&quot;promotion discount&quot;&gt;限时优惠8折&lt;/text&gt;              &lt;text class=&quot;promotion postage-included&quot;&gt;包邮&lt;/text&gt;          &lt;/view&gt;           &lt;view class=&quot;original-price-sales&quot;&gt;              &lt;text class=&quot;price&quot;&gt;原价12.5&lt;/text&gt;              &lt;text class=&quot;sales&quot;&gt;销量：2000&lt;/text&gt;          &lt;/view&gt;      &lt;/view&gt;  &lt;/view&gt;&lt;/view&gt;</code></pre><h5 id="list-wxml-1"><a href="#list-wxml-1" class="headerlink" title="list.wxml"></a>list.wxml</h5><pre><code>.box1{  display: flex;  background:#fff;  padding-top: 24rpx;  flex-direction: row;  justify-content: space-between;  margin:0 180rpx;  padding-bottom: 20rpx;}.box .tab-item{  font-size: 15rpx;  color: #999;}.active{  border-bottom: 5rpx solid #353535;}.my-tabs-content{  display: flex;  flex-direction: column;  background:#fff;}.my-tabs-content .content-item{  display: flex;  flex-direction: row;  margin-bottom: 46rpx;}.my-tabs-content .content-item .img{  display: flex;  flex-direction: row;  margin-left: 20rpx;  width: 180rpx;  height: 180rpx;}.my-tabs-content .content-item .info{  display: flex;  flex-direction: column;  margin:20rpx;  width: 100%;}.my-tabs-content .content-item .info .name,.price-info{  text-align: left;  font-size: 15px;  color: #000;  margin-top: 16rpx;}.my-tabs-content .content-item .info .price-info{  display: flex;  flex-direction: row;  align-items: center;  margin-top:16rpx;}.my-tabs-content .content-item .info .price-info .price{  font-size: 15px;  color: #ff3b53;  font-weight: bold;}.my-tabs-content .content-item .info .price-info .promotion{  font-size: 12px;  font-weight: bold;  border: solid 1px #ff3b53;  margin-left: 15rpx;  padding: 4rpx 6rpx;}.my-tabs-content .content-item .info .price-info .discount{  border-color: #ff3b53;  color: #ff3b53;}.my-tabs-content .content-item .info .price-info .postage-included{  border-color: #fb7802;  color: #fb7802;}.my-tabs-content .content-item .info .price-info .discount{  border-color: #ff3b53;  background: #ff3b53;  color: #fff;}.my-tabs-content .content-item .original-price-sales{  display: flex;  flex-direction: row;  justify-content: space-between;  margin-top: 10rpx;  font-size: 12px;  color: #999;}</code></pre><!-- 怎么样，是不是很简单？好了，肝不动了， 我要去睡觉啦！有不明白的可以和我联系哦 --><p>微信：ck2211314  做的不好还请多指教感谢  有需要的可以加我微信 也可以交个朋友</p><script src="https://utteranc.es/client.js" repo="nusr/blog" issue-term="pathname" theme="github-light" crossorigin="anonymous" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;页面图片如下图&quot;&gt;&lt;a href=&quot;#页面图片如下图&quot; class=&quot;headerlink&quot; title=&quot;页面图片如下图&quot;&gt;&lt;/a&gt;页面图片如下图&lt;/h5&gt;&lt;p&gt;最近在学习微信小程序，下面提供自己做的微信小程序详情页页面，仅供参考。&lt;br&gt;话不多说直接上图&lt;/p
      
    
    </summary>
    
    
      <category term="小程序" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>直白的话告诉你在 javascript 中如何用 jsonp 实现跨域请求</title>
    <link href="http://yoursite.com/2019/07/09/my-first-blog/"/>
    <id>http://yoursite.com/2019/07/09/my-first-blog/</id>
    <published>2019-07-09T08:28:52.000Z</published>
    <updated>2019-08-27T14:12:16.026Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li>这边文档希望通过自己对jsonp的理解，能够采用最简单、最直白的语言告诉大家jsonp是干嘛的！当然，其间难免有纰漏之处，希指正出来！<h3 id="jsonp能解决的问题"><a href="#jsonp能解决的问题" class="headerlink" title="jsonp能解决的问题"></a>jsonp能解决的问题</h3></li><li>首先我们需要jsonp是干嘛的，它是一种解决浏览器跨域问题的方案，说道这里什么是浏览器跨域呢！说白了，就是浏览器内部有一种机制为了保证每个站点之间的请求达到安全、独立，相互交互不乱套等，浏览器阻止了不同源站点之间的请求。如果不采用跨域的话，浏览器将会报错的。</li></ul><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;Zh-cn&quot;&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;/&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,Chrome=1.0&quot;/&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,user-scalable=no&quot;/&gt;    &lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;/&gt;    &lt;meta name=&quot;Keywords&quot; content=&quot;&quot;/&gt;    &lt;meta name=&quot;description&quot; content=&quot;&quot;/&gt;    &lt;title&gt;demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=&quot;text/javascript&quot;&gt;    (function(){        var xhr = new XMLHttpRequest();        xhr.open(&apos;GET&apos;,&apos;http://localhost/demo/demo1.php&apos;,true);        xhr.send();        xhr.onreadystatechange = function(){            if(xhr.status == 200 &amp;&amp; xhr.readyState == 4){                console.log(xhr.responseText);            }else{                console.log(&apos;什么都没有&apos;);            };        };        xhr.onerror = function(){            console.log(&apos;请求出错了！&apos;);        };    })();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>我们通过上面的页面在请求资源时可以看到下面请求跨域错误提示：<br><img src="https://user-gold-cdn.xitu.io/2017/2/4/f8918f4dabadca306b34ae5ab760f216.png?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h3 id="怎样理解跨域，以及它跟浏览器的关系呢！"><a href="#怎样理解跨域，以及它跟浏览器的关系呢！" class="headerlink" title="怎样理解跨域，以及它跟浏览器的关系呢！"></a>怎样理解跨域，以及它跟浏览器的关系呢！</h3><ul><li>首先我们不想把概念说的神乎其神，但是大家要理解下面说的话，可以先看下《http报文权威指南》了解下相关概念！这里指出一下，如果只是从http请求的方面来说，上面的页面请求是没有什么问题的，而且也不会报错，因为http本身是无状态的，它也不知道请求的是谁，被请求的是谁，它只知道客户端有请求，服务器把客户端需要的东西返回就好了！<strong>上面的页面之所以会报错，是由于浏览器自己带有了一种叫做同源策略的安全机制产生的！</strong></li><li>什么是同源策略，相关概念可以自行google或百度，说白了就是一种机制促使浏览器限制不同源之间的请求。这里说一下什么样的请求是不同源的，看下面的表格：</li></ul><p>| <a href="http://www.demo.com" target="_blank" rel="noopener">www.demo.com</a>     | <a href="http://www.demo.com" target="_blank" rel="noopener">www.demo.com</a>       |  这是不同源的，因为协议不同<br>| <a href="http://www.demo1.com" target="_blank" rel="noopener">www.demo1.com</a>    | <a href="http://www.demo2.com" target="_blank" rel="noopener">www.demo2.com</a>      |  这是不同源的，因为主机不同<br>| <a href="http://www.demo.com:80" target="_blank" rel="noopener">www.demo.com:80</a>  | <a href="http://www.demo.com:8080" target="_blank" rel="noopener">www.demo.com:8080</a>  |  这是不同源的，因为协议不同   </p><h3 id="怎么解决跨域请求问题呢！"><a href="#怎么解决跨域请求问题呢！" class="headerlink" title="怎么解决跨域请求问题呢！"></a>怎么解决跨域请求问题呢！</h3><ul><li>常见的和自己熟悉有几种方案，如：1、用cros；2、用代理；3、使用jsonp。这里只对jsonp介绍，其他的方案可以自行查看相关文档。</li></ul><h3 id="jsonp的原理"><a href="#jsonp的原理" class="headerlink" title="jsonp的原理"></a>jsonp的原理</h3><ul><li>jsonp原理其实很简单，首先我们先回归一个现实：我们发现，当我们在html插入img、a、script标签的时候，它们是没有同源限制的。所以jsonp的原理就是利用img、script等标签插入一个请求地址，让不同源的请求远离浏览器的同源策略限制。</li></ul><h3 id="实（示）例"><a href="#实（示）例" class="headerlink" title="实（示）例"></a>实（示）例</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;Zh-cn&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;/&gt;    &lt;title&gt;demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://localhost/demo/demo1.php&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;后台demo1.php代码如下:&lt;?php    echo &quot;console.log(&apos;欢迎访问demo1.php页面&apos;)&quot;;?&gt;</code></pre><p>控制台打印结果截图如下：</p><p><img src="%EF%BC%81%5B%5D(https://user-gold-cdn.xitu.io/2017/2/4/4eca1f4e72ad115052a1f9d020d0a61b.png?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><h3 id="怎么实现精确回调呢！"><a href="#怎么实现精确回调呢！" class="headerlink" title="怎么实现精确回调呢！"></a>怎么实现精确回调呢！</h3><ul><li>有时候我们并不是只是见到的得到后台数据就好了，还要到前台进行一些处理，那怎么做呢！恩，没错就是使用回调，首先说一下思路：1、首先在页面中定义好回调函数；2、然后在页面通过插入相关标签待query参数的形式实现jsonp请求传递回调函数名字；3、后台得到回调函数名字，并将需要处理的数据传递给回调函数，最后向前台返回回调函数的“调用”，最后一步切记是传回回调函数的调用。示例如下：</li></ul><p><strong>前台代码</strong></p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;Zh-cn&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;/&gt;    &lt;title&gt;demo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=&quot;text/javascript&quot;&gt;    //第一步，现在前台定义回调函数    function addNum(num1,num2){        var sum = num1 + num2;        console.log(&quot;两数相加的结果是&quot;+sum);        return sum;    };    //第二步，插入script标签并通过传入query参数的形式传递回调函数的名字给后台    (function(){        var _script = document.createElement(&apos;script&apos;);        _script.type = &apos;text/javascript&apos;;        _script.src = &apos;http://localhost/demo/demo2.php?callback=addNum&apos;;        document.body.appendChild(_script);    })();&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>后台demo2.php代码如下：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">       <span class="comment">/*第三步，获取前台传过来的回调函数的名字*/</span></span></span><br><span class="line"><span class="php">       $fontEndCallback = $_GET[<span class="string">'callback'</span>];<span class="comment">//addNum;</span></span></span><br><span class="line">       /*这里我们先模拟两个数据$num1,$num2，</span><br><span class="line">         实际生产环境中可能就是查询数据库等操作获取数据</span><br><span class="line"><span class="php">       */</span></span><br><span class="line"><span class="php">       $num1 = <span class="number">15</span>;</span></span><br><span class="line"><span class="php">       $num2 = <span class="number">30</span>;</span></span><br><span class="line"><span class="php">       <span class="comment">/*最后切记是返回回调函数的调用，一定记得是调用*/</span></span></span><br><span class="line"><span class="php">       <span class="keyword">echo</span> $fontEndCallback.<span class="string">"($num1,$num2)"</span>;<span class="comment">//这里的‘.’相当于js里面的字符串连接操作，等同+</span></span></span><br><span class="line"><span class="php">   <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>控制台结果截图如下：</strong><br><img src="https://user-gold-cdn.xitu.io/2017/2/4/248801d37f0429069c931288c5c4714e.png?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>只要弄懂这三步你就会对jsonp心领神会了！</p><h3 id="jsonp跟ajax的区别、jsonp和json的区别"><a href="#jsonp跟ajax的区别、jsonp和json的区别" class="headerlink" title="jsonp跟ajax的区别、jsonp和json的区别"></a>jsonp跟ajax的区别、jsonp和json的区别</h3><ul><li>首先严格来说，jsonp和ajax是没有关系，唯一的相同点可能就是都是向后台发请求！jsonp和json也是没有关系的，虽然看上去名字很像，但是jsonp描述的是一种请求数据的跨域方式，而json是一种数据格式！</li></ul><script src="https://utteranc.es/client.js" repo="nusr/blog" issue-term="pathname" theme="github-light" crossorigin="anonymous" async></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;这边文档希望通过自己对jsonp的理解，能够采用最简单、最直白的语言告诉大家jsonp是干嘛的！当然，其间难免有纰漏之处，希指正
      
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
</feed>
